@use 'variables';

// This creates css variables for common breakpoints (needed when using MediaBreakpointService with BreakpointObserver)
@use 'src/xforge-common/media-breakpoints/css-vars';

@import 'variables';
@import 'fonts';
/* Only import relevant Bootstrap 4.x styles */
@import 'bootstrap/scss/bootstrap-grid';
@import 'text';

body {
  margin: 0;
  font-family: Roboto, sans-serif;
}

as-split.is-disabled > .as-split-gutter .as-split-gutter-icon {
  background-image: none !important;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-max {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.cdk-overlay-pane.inviteDialogComponent {
  width: 80%;
  max-width: 400px !important;
}

.cdk-overlay-pane.inviteDialogComponent > .mat-dialog-container {
  padding-top: 5px !important;
}

.snackbar-error {
  background-color: variables.$errorColor !important;
}

.mat-flat-button {
  transition: background-color 0.15s, color 0.15s;
  &:not(:disabled):hover {
    background-color: variables.$greenLight;
    color: variables.$sf_grey;
  }
}

.offline-text {
  color: variables.$errorColor;
}

.locale-fonts mat-option {
  font-family: $languageFonts;
}

// Allows checkbox label word-wrap
// https://github.com/angular/components/issues/8416
.mat-checkbox-layout {
  white-space: normal !important;
}

.mat-progress-bar--closed {
  opacity: 0;
  animation: none;
}

body[dir='rtl'] .mirror-rtl {
  transform: scaleX(-1);
  .mat-badge-content {
    transform: scaleX(-1);
  }
}
