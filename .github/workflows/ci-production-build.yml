# This workflow will do a clean install of node dependencies, do an Angular production build across different
# versions of node and OSes.
# See: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Angular Production Build
permissions: {}

on:
  push:
    branches: [master, develop]
  pull_request:
  merge_group:

jobs:
  build:
    name: node ${{ matrix.node_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node_version: ["22.13.0"]
        npm_version: ["10.9.2"]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: "npm"
          cache-dependency-path: |
            src/SIL.XForge.Scripture/ClientApp/package-lock.json
            src/RealtimeServer/package-lock.json
      - name: Upgrade npm
        env:
          NPM_VERSION: ${{ matrix.npm_version }}
        run: |
          set -xueo pipefail
          npm install -g npm@${NPM_VERSION}
      - name: Build Realtime server dependencies for Angular
        run: cd src/RealtimeServer && (npm ci || (sleep 3m && npm ci))
      - name: Angular Frontend Production Build
        run: cd src/SIL.XForge.Scripture/ClientApp && (npm ci || (sleep 3m && npm ci)) && npm run build
