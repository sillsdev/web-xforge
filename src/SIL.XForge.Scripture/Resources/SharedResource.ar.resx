<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AudioOnlyQuestion" xml:space="preserve">
    <value>- {0} audio-only question -</value>
    <comment>Text to show in Paratext Notes when question is audio-only</comment>
  </data>
  <data name="AudioOnlyResponse" xml:space="preserve">
    <value>- {0} audio-only response -</value>
    <comment>Text to show in Paratext Notes when response is audio-only</comment>
  </data>
  <data name="EmailBad" xml:space="preserve">
    <value>Enter a valid email address</value>
  </data>
  <data name="EmailMissing" xml:space="preserve">
    <value>Enter your email address</value>
  </data>
  <data name="InviteEmailOption" xml:space="preserve">
    <value>Enter your email address and a new password for your {0} account and click Sign up.</value>
  </data>
  <data name="InviteFacebookOption" xml:space="preserve">
    <value>Click {0}Sign up with Facebook{1} and follow the instructions to access {2} using an existing Facebook account, or</value>
  </data>
  <data name="InviteGoogleOption" xml:space="preserve">
    <value>Click {0}Sign up with Google{1} and follow the instructions to access {2} using an existing Google account (such as Gmail), or</value>
  </data>
  <data name="InviteGreeting" xml:space="preserve">
    <value>Hello,{0}{1} invites you to join the {2} project on {3}.{0}Just click the link below, choose how to log in, and you will be ready to start.{0}{0}To join, go to {4}</value>
  </data>
  <data name="InviteInstructions" xml:space="preserve">
    <value>If you are not already a {0} user, then after clicking the link, click {1}Sign Up{2} and do one of the following:</value>
  </data>
  <data name="InviteLinkExpires" xml:space="preserve">
    <value>The project invitation link expires in 14 days.</value>
  </data>
  <data name="InvitePTOption" xml:space="preserve">
    <value>Click {0}Sign up with Paratext{1} and follow the instructions to access {2} using an existing Paratext account, or</value>
  </data>
  <data name="InviteSignature" xml:space="preserve">
    <value>Regards,{0}The {1} team</value>
  </data>
  <data name="InviteSubject" xml:space="preserve">
    <value>You've been invited to the project {0} on {1}</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>اللغة</value>
    <comment>Tool tip for the language selector</comment>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Learn More</value>
    <comment>Link to the learn more page seen in the page footer and as button at the bottom of the home page</comment>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>دخول</value>
    <comment>Log In button label</comment>
  </data>
  <data name="MessageMissing" xml:space="preserve">
    <value>Let us know why you want to use Scripture Forge</value>
  </data>
  <data name="NameMissing" xml:space="preserve">
    <value>Enter your name</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privacy</value>
    <comment>Link to the Privacy policy seen in the page footer</comment>
  </data>
  <data name="RoleMissing" xml:space="preserve">
    <value>Select your language project role</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>إنشاء حساب</value>
    <comment>Sign Up button label</comment>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>Terms</value>
    <comment>Link to the Terms of service seen in the page footer</comment>
  </data>
  <data name="UserMissing" xml:space="preserve">
    <value>The user does not exist.</value>
  </data>
</root>
