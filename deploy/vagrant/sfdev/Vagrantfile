# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "marksvc/sfdev"
  config.vm.hostname = "sfdev"

  config.vm.provider "virtualbox" do |vb|
    vb.gui = true
    vb.cpus = 4
    # At least 3000 MB of RAM is needed to run tests. Using an initial value here of 6000 MB in case the machine is
    # opened on a computer with 8 GB RAM. Most of the time, 14000 MB RAM is enough for development, using Code,
    # Chromium, running tests, etc. at the same time. Though more, such as 24000, is sometimes needed.
    # To set how much RAM the vagrant guest should use, you can set the RAM value in a SFDEV_RAM
    # environment variable by running a command such as
    #   tee --append ~/.pam_environment <<< 'SFDEV_RAM="14000"'
    # and then logging back into your computer. Or temporarily set the value here.
    vb.memory = ENV['SFDEV_RAM'] || "6000"
    # Enable 3D acceleration and more video RAM for larger displays.
    vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
    vb.customize ["modifyvm", :id, "--vram", "128"]
  end

  config.vm.provision "shell", privileged: false, inline: <<~SHELL
    set -xueo pipefail

    function tryharderto() { i=0; until "$@"; do ((++i <= 3)); echo >&2 "Retrying ${i}"; sleep 2m; done }

    # Prepare canary
    tee ~/Desktop/warning-not-provisioned.txt >/dev/null <<END
    The presence of this file means that the vagrant virtual machine did not
    finish provisioning correctly.
    The best way to get to a working machine state is to backup any data that
    you want to keep from this virtual machine, and then destroy and re-create
    this vagrant virtual machine by running these commands from your host:
        vagrant destroy
        vagrant up
    END

    # Set git user and email from host.
    GIT_USER="#{`git config --get user.name`.strip}"
    GIT_EMAIL="#{`git config --get user.email`.strip}"
    [[ -z $GIT_USER ]] || git config --global user.name "${GIT_USER}"
    [[ -z $GIT_EMAIL ]] || git config --global user.email "${GIT_EMAIL}"

    # Update code repo
    cd ~/code/web-xforge
    git pull --ff-only --recurse-submodules

    # Use the latest configuration and dependencies
    cd ~/code/web-xforge/deploy
    tryharderto ansible-playbook playbook_focal.yml --limit localhost

    cd ~/code/web-xforge/
    sudo npm install --global npm@10.9

    # Remove canary
    rm ~/Desktop/warning-not-provisioned.txt
    echo "Provisioning finished successfully."
  SHELL
end
