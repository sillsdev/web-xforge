@use 'src/variables';

@import 'bootstrap/scss/mixins/breakpoints';

$toolbar-height: 56px;

// Set height of the app to 100% so that the app will fill the entire screen.
// Don't use 100vh because that will cause the app to be too tall on mobile devices when the browser's address bar is
// visible.
// Newer browsers support dvh (dynamic viewport height) units, but they are not supported in Safari 15.4 and Chrome 108.
// Setting the height to 100% seems to work just as well.
::ng-deep html,
::ng-deep body,
:host {
  height: 100%;
}

:host {
  display: flex;
  position: relative;

  > mat-progress-bar {
    position: absolute;
    z-index: 8;
  }

  > header {
    position: absolute;

    &.overlay-drawer {
      z-index: 6;
    }
  }

  .top-app-bar-adjust {
    margin-top: $toolbar-height;
  }

  .top-app-bar-adjust-double {
    margin-top: $toolbar-height * 2;
  }

  .app-content {
    display: flex;
    flex-direction: column;
    flex: 1;
    overflow-y: auto;
    overflow-x: hidden;

    > div {
      flex: 1;
      padding: 14px 20px;
      @include media-breakpoint-only(xs, variables.$grid-breakpoints) {
        padding: 10px;
      }
      display: flex;
      flex-direction: column;
    }
  }
}

.checking-unavailable {
  text-align: center;
}

header {
  width: 100%;
  z-index: 7;

  .title {
    cursor: pointer;
    display: flex;
    align-items: center;
    column-gap: 1em;
  }

  .update-banner {
    display: flex;
    gap: 8px;
  }

  .refresh-message {
    margin: auto;
    font-weight: initial;
    white-space: initial;
    line-height: initial;
    font-size: 1rem;
  }
}

::ng-deep .mat-menu-panel {
  // For menu items that should be mostly styled like the others, but cannot be clicked
  .pseudo-menu-item {
    padding: 0 16px;
    line-height: 36px;
    font-size: 14px;
    color: rgba(0, 0, 0, 0.87);
    mat-icon {
      margin: initial;
    }
  }

  &.help-menu {
    max-width: unset;
  }

  &.user-menu {
    min-width: 10em;
    .user-info {
      display: flex;
      flex-direction: column;
      height: auto;
    }
    .name-and-edit-button {
      display: flex;
      flex-direction: row;
      column-gap: 5px;
      align-items: center;
      color: variables.$purpleLight;
    }
    #user-menu-name {
      line-height: 1.5rem;
      font-weight: bold;
    }
  }

  &.locale-menu {
    .locale-disabled::after {
      content: ' *';
    }

    .active-locale {
      font-weight: bold;
    }

    .mat-menu-item:not(.active-locale) mat-icon {
      visibility: hidden;
    }

    .mat-menu-item {
      font-family: variables.$languageFonts;
    }
  }
}

.mat-toolbar {
  min-height: initial;
}

.mat-toolbar-row {
  height: 56px;
  padding: 0 6px;
}

.mat-toolbar .toolbar-spacer {
  flex: 1 1 auto;
}

.mat-toolbar .mat-icon-button {
  width: 50px;
  height: 50px;

  app-avatar {
    display: flex;
    justify-content: center;
  }
}

::ng-deep .mat-menu-item.report-issue {
  display: flex;
  flex-direction: column;
  line-height: 1.6;
}

.online-status {
  display: flex;
  column-gap: 10px;
  justify-content: center;
  align-items: center;
}

.translate-icon {
  width: 24px;
  height: 24px;
}

mat-nav-list .mat-list-item {
  height: 48px;
  font-weight: 500;
  font-size: 14px;

  mat-icon,
  .translate-icon {
    color: variables.$purpleMedium;
    fill: variables.$purpleMedium;
    transition: color 0.15s;
    padding: 0;
  }
  &.activated-nav-item,
  &:hover {
    mat-icon,
    .translate-icon {
      color: variables.$purpleLight;
      fill: variables.$purpleLight;
    }
  }

  mat-icon:last-child {
    margin-left: auto;
  }

  ::ng-deep .mat-list-item-content {
    column-gap: 16px;
    padding-inline-end: 8px;
  }
}

.mat-list-item.activated-nav-item {
  background-color: #e7e8e7;
}

#tools-menu-list,
#admin-pages-menu-list {
  padding-top: 0;
}

#tools-menu-list {
  overflow-y: auto;
}

.sync-in-progress {
  animation: spin 0.75s linear infinite;
}

@keyframes spin {
  100% {
    transform: rotate(-360deg);
  }
}

::ng-deep #sync-icon .mat-badge-content {
  font-family: 'Material Icons';
  background: transparent;
  color: variables.$errorColor;
  font-weight: normal;
  font-size: 1.4rem;
}

.fix-rtl-arrow-placement {
  margin-left: initial !important;
  margin-right: auto;
}

.nav-label {
  color: white;
  padding: 2px 6px;
  border-radius: 100px;
  font-size: small;
  background: #4678d6;
  margin-inline-start: auto;
}

.mat-drawer-container {
  width: 100%;
  background: initial;
}

.app-content {
  height: 100%;
}

.nav-spacer {
  flex-grow: 1;
}

.mat-drawer ::ng-deep .mat-drawer-inner-container {
  display: flex;
  flex-direction: column;
  width: 255px;
}
