@page
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model IndexModel
@section css {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.9.2/tiny-slider.css"/>
}
@section scripts {
    <script type="text/javascript">
        webAuth.checkSession({}, function (err, authResult) {
            if (!err) {
                var options = { state: JSON.stringify({}) };
                webAuth.authorize(options);
            }
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.9.2/min/tiny-slider.js"></script>
    <script type="text/javascript">
        var AUTOPLAY_TIMEOUT = 15000;
        var playerSlider;
        var pauseIntervalId;
        // start the sliders at 3 different times so they don't all slide together
        document.querySelectorAll('.features .slider').forEach(function (container, index) {
            var slider = tns({
                container: container,
                autoplay: true,
                autoplayButton: '#autoplay-button',
                autoplayHoverPause: true,
                autoplayResetOnVisibility: false,
                autoplayText: ['<i class="material-icons">play_arrow</i>', '<i class="material-icons">pause</i>'],
                autoplayTimeout: AUTOPLAY_TIMEOUT,
                controlsText: ['<i class="material-icons">keyboard_arrow_left</i>', '<i class="material-icons">keyboard_arrow_right</i>'],
                // must disable loop for videos otherwise you get 3 copies of each slide that can all play at once
                loop: false,
                mouseDrag: true,
                nav: true,
                navPosition: 'bottom',
                preventActionWhenRunning: true,
                preventScrollOnTouch: 'force',
                // with loop disabled this makes it behave the same as with loop enabled when there are only 2 slides
                rewind: true,
                speed: 800,
                swipeAngle: false
            });
            slider.pause();
            if (container.id && container.id === 'player-slider') {
                playerSlider = slider;
            }
            // works if there are more than 3 sliders
            setTimeout(function () {
                slider.play();
            }, AUTOPLAY_TIMEOUT*(index % 3)/3);
        });

        var tag = document.createElement('script');
        tag.src = `${window.location.protocol}//www.youtube.com/iframe_api`;
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        function onYouTubeIframeAPIReady() {
            configurePlayer('player-setup-cc', 'mRsuBIkAhhk');
            configurePlayer('player-see-cc', 'rKQj6_954ic');
        }

        function configurePlayer(player, videoId) {
            // must use <div> replacement for this setup to work, particularly when using origin setting with events
            new YT.Player(player, {
                host: `${window.location.protocol}//www.youtube-nocookie.com`,
                videoId: videoId,
                playerVars: {
                    enablejsapi: 1,
                    origin: '@(ViewData["Origin"])'
                },
                events: {
                    onStateChange: onPlayerStateChange
                }
            });
        }

        function onPlayerStateChange(event) {
            if (event.data === YT.PlayerState.PLAYING) {
                // ensure slider stays paused while video is playing
                pauseIntervalId = setInterval(playerSlider.pause, AUTOPLAY_TIMEOUT);
                playerSlider.pause();
            } else if (pauseIntervalId) {
                clearInterval(pauseIntervalId);
            }
        }
    </script>
}

<section id="hero">
    <div class="container">
        <div class="mdl-grid">
            <div class="mdl-cell mdl-cell--12-col align-center">
                <img src="~/images/multi-devices.svg" alt="Works on multiple devices" />
                <h1 class="align-center">@Localizer["Description"]</h1>
            </div>
        </div>
    </div>
</section>
<section id="engage">
    <div class="container">
        <div class="mdl-grid">
            <div class="mdl-cell mdl-cell--12-col flex direction-column justify-content-center">
                <div class="title align-center">@Localizer["EngageTitle"]</div>
                <div class="engage-features">
                    <div class="engage-feature">
                        <img src="~/images/logo-paratext.svg" alt="Paratext">
                        <span>@Localizer["EngageCollaborate"]</span>
                    </div>
                    <div class="engage-feature">
                        <img src="~/images/community-checking.svg" alt="Community Checking">
                        <span>@Localizer["EngageChecking"]</span>
                    </div>
                    <div class="engage-feature">
                        <img src="~/images/translate.svg" alt="Translate">
                        <span>@Localizer["EngageSuggestions"]</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section id="about" class="panel">
    <div class="container">
        <div class="mdl-grid">
            <div class="mdl-cell mdl-cell--6-col mdl-cell--12-col-tablet">
                <div class="section-title">
                    <h2>@Localizer["AboutHeader"]</h2>
                    <div class="title">@Localizer["AboutTitle"]</div>
                </div>
            </div>
            <div class="mdl-cell mdl-cell--6-col mdl-cell--12-col-tablet intro">
                <p>@Localizer["AboutEngaging"]</p>
                <p>@Localizer["AboutCheckingTool"]</p>
            </div>
        </div>
        <div class="mdl-grid">
            <div class="mdl-cell mdl-cell--12-col">
                <div class="about-features">
                    <div class="about-feature">
                        <img src="~/images/logo-paratext.svg" alt="Paratext">
                        <span>@Localizer["AboutParatext"]</span>
                        <p>@(Html.Raw(Model.Localizer["AboutParatextDescription", "<span class=\"highlight\">", "</span>"]))</p>
                    </div>
                    <div class="about-feature">
                        <i class="material-icons">shuffle</i>
                        <span>@Localizer["AboutFlexible"]</span>
                        <p>@(Html.Raw(Model.Localizer["AboutFlexibleDescription", "<span class=\"highlight\">", "</span>"]))</p>
                    </div>
                    <div class="about-feature">
                        <i class="material-icons">group</i>
                        <span>@Localizer["AboutUserEngagement"]</span>
                        <p>@(Html.Raw(Model.Localizer["AboutUserEngagementDescription", "<span class=\"highlight\">", "</span>"]))</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@await Html.PartialAsync("_IndexExtraPartial")
