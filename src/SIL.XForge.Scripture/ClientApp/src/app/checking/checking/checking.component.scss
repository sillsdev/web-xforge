@use 'src/xforge-common/media-breakpoints/breakpoints' as *;
@use 'src/variables' as vars;
@use './checking-global-vars' as checkingVars;

// Width chosen based on when the book/chapter chooser runs into the action icon buttons at the top of the text viewer
$questionsPanelBreakpoint: 700px;

$questionsHeaderInlineStartPadding: 8px;

:host {
  display: flex;
  flex: 1;
  height: 100%;
}

header {
  display: flex;
  padding: 4px 0;
}

.panel-content {
  display: flex;
  position: relative;
  flex: 1;
}

#checking-app-container {
  display: flex;
  flex-wrap: nowrap;
  flex: 1;
  height: 100%;
}

#questions-panel {
  display: flex;
  flex-direction: column;
  width: 300px;
  box-sizing: border-box;
  flex-shrink: 0;

  .audio-checking-warning {
    padding: 8px;
    color: checkingVars.$notifyUser;
  }

  header {
    flex-direction: column;
    align-items: stretch;
    padding-inline-start: $questionsHeaderInlineStartPadding;
    padding-inline-end: 4px;
    padding-bottom: 4px;

    &.filter-applied {
      height: auto;
    }
  }

  .header-main {
    display: flex;
  }

  h2 {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0;
    flex: 1;

    span {
      font-size: 14px;
      opacity: 0.5;
    }
  }

  .questions-overlay-close,
  .hidden {
    display: none;
  }

  // Expand the side and bottom to fill space
  @include media-breakpoint('<', md) {
    margin-inline-start: -20px;
    margin-bottom: -14px;
  }

  // Override 'sm' breakpoint for this element (also adjusts BreakPointObserver 'SM' for this element)
  @include media-breakpoint('<=', sm, $questionsPanelBreakpoint) {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    margin: 0;
    z-index: 7;
    background: #fff;
    transition: transform 0.4s cubic-bezier(0.68, -0.6, 0.265, 1.6); // Snap back effect

    &.overlay-visible {
      transform: translateX(100%);

      .questions-overlay-close {
        display: block;
      }
    }
  }
}

// Handle questions overlay in rtl environments
:host-context([dir='rtl']) {
  #questions-panel {
    @include media-breakpoint('<=', sm, $questionsPanelBreakpoint) {
      left: 100%;

      &.overlay-visible {
        transform: translateX(-100%);
      }
    }
  }
}

#text-panel {
  display: flex;
  flex-direction: column;
  height: 100%;
  flex-grow: 1;
  // setting min width prevents the element from overflowing the flex parent
  min-width: 0;

  .chapter-select {
    cursor: pointer;
  }

  #split-container {
    display: flex;
    flex: 1;
    overflow: hidden;

    > as-split {
      height: auto; /* fix for SF-754 */
    }
  }

  #scripture-panel {
    display: flex;
    flex-direction: column;
    flex: 1;
    overflow: hidden;

    header {
      align-items: center;
    }

    .no-audio-message {
      color: checkingVars.$notifyUser;
      padding: 8px;
    }

    .panel-content {
      height: 100%;
      display: flex;
      flex-direction: column;
      position: unset;
    }

    .panel-nav {
      display: flex;
      justify-content: space-between;
      flex: 1;

      > div {
        display: flex;
        align-items: center;
        justify-content: flex-start;

        h2 {
          display: flex;
          align-items: center;
          margin: 0;
          flex: 0;

          span {
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
            margin-right: 5px;
          }

          .chapter-dropdown {
            display: flex;
          }

          > div {
            display: flex;
            align-items: center;
          }
        }

        &.action-icons {
          justify-content: flex-end;
        }
      }
    }
  }

  #answer-panel {
    padding-top: 12px;
    padding-bottom: 12px;
    padding-inline-start: 15px;

    @include media-breakpoint('<', md) {
      padding-left: 0;
      padding-right: 0;
    }
  }

  #question-nav {
    background-color: lighten(vars.$sf_grey, 70%);
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding: 9px;

    .question-nav-wrapper {
      display: flex;

      .mat-mdc-icon-button {
        display: none;
      }

      // Switch to icon-only prev/next buttons on small screens
      @include media-breakpoint('<=', sm) {
        .mat-mdc-button {
          display: none;
        }

        .mat-mdc-icon-button {
          display: block;
        }
      }
    }

    @include media-breakpoint('<', md) {
      margin-bottom: -14px;
      margin-inline: 0 -20px;
    }

    @include media-breakpoint('<=', sm, $questionsPanelBreakpoint) {
      // Widen once the questions panel is hidden
      margin-inline-start: -20px;
      justify-content: space-between;
    }

    .next-question {
      margin-inline-end: 8px;
    }

    @include media-breakpoint('<', sm) {
      margin-bottom: -10px;
      margin-inline: -10px;
    }

    &.hide {
      display: none;
    }
  }

  #project-summary {
    width: 36px;
    height: 36px;
  }
}

.heading-with-icon {
  display: flex;
  column-gap: 10px;
}

.menu-list {
  h2 {
    color: #000;
    font-weight: bold;
  }

  :not(.selected) mat-icon {
    visibility: hidden;
  }
}

.scripture {
  flex-grow: 1;
  position: relative;
}

.scripture-audio-player-wrapper {
  background: #e8eae6;
  padding: 0.25rem;
}

.hidden {
  display: none;
}

.active-question-scope-button ::ng-deep {
  font-size: 13px;
  color: vars.$blueMedium !important;
  font-weight: 400;
  align-self: flex-start;
  height: 26px;
  display: flex;
  align-items: center;
  margin-inline-start: -($questionsHeaderInlineStartPadding - 2px);
  padding-top: 4px;
  padding-bottom: 4px;
  padding-inline: 5px 8px; // Reduce padding from mat-button defaults
  white-space: pre-wrap;

  mat-icon {
    font-size: 18px;
    height: 18px;
    width: 18px;
    margin-inline-end: 4px;
    color: lighten(vars.$blueMedium, 15%);
  }

  .divider {
    font-size: 18px;
    margin: 0 5px;
  }

  span.mdc-button__label {
    display: flex;
    align-items: center;
  }
}
