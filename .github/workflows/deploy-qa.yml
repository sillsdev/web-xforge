name: "Deploy to QA"

env:
  vcs_tag_prefix: "SF-QAv"

concurrency: deploy-staging

on:
  schedule:
    # Run every day except Tuesday, at 01:30 UTC, shortly before beginning of tester workday.
    # Note that this workflow can be disabled from the GitHub UI by going to
    # Actions > Workflows > Deploy to QA > "..." > Disable workflow
    - cron: "30 1 * * 0-1,3-6"
  workflow_dispatch:

jobs:
  update_branch:
    name: "Update branch"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set branch
        run: git push origin origin/master:sf-qa

  determine_version:
    name: "Determine version"
    uses: ./github/workflows/compute-next-stag-version.yml
    with:
      tag_prefix: ${{ env.vcs_tag_prefix }}

  deploy:
    name: "Deploy to QA"
    uses: ./.github/workflows/deploy.yml
    needs: determine_version
    with:
      dotnet_version: "8.0.x"
      node_version: "18.20.2"
      npm_version: "10.5.0"
      os: "ubuntu-20.04"

      angular_config: "staging"
      app_name: "scriptureforge"
      app_suffix: "_qa"
      version_number: "${{ needs.determine_version.outputs.next_version }}"
      vcs_tag_prefix: ${{ env.vcs_tag_prefix }}
      node_options: "--max_old_space_size=4096"
      project: "SIL.XForge.Scripture"

    secrets:
      deploy_server: ${{secrets.qa_deploy_server}}
      deploy_known_hosts: ${{secrets.qa_deploy_known_hosts}}
      deploy_ssh_private_key: ${{secrets.qa_deploy_ssh_private_key}}
      auth_backend_secret: ${{ secrets.qa_auth_backend_secret }}
      auth_webhook_password: ${{ secrets.qa_auth_webhook_password }}
      paratext_client_id: ${{secrets.qa_paratext_client_id}}
      paratext_api_token: ${{ secrets.qa_paratext_api_token }}
      paratext_resource_password_base64: ${{ secrets.qa_paratext_resource_password_base64 }}
      paratext_resource_password_hash: ${{ secrets.qa_paratext_resource_password_hash }}
      serval_client_id: ${{secrets.qa_serval_client_id}}
      serval_client_secret: ${{ secrets.qa_serval_client_secret }}
      serval_webhook_secret: ${{ secrets.qa_serval_webhook_secret }}
