<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutCheckingTool" xml:space="preserve">
    <value>La herramienta de Comprobación por la Comunidad facilita la tarea de verificación de las Escrituras parte por parte, con el objetivo de transmitir de manera más rápida comentarios y sugerencias generales al comité de traducción.</value>
  </data>
  <data name="AboutEngaging" xml:space="preserve">
    <value>Actualmente, grupos de hablantes de distintas lenguas y diversidad geográfica se están involucrando en muchos proyectos de Traducción.</value>
  </data>
  <data name="AboutFlexible" xml:space="preserve">
    <value>Flexible</value>
  </data>
  <data name="AboutFlexibleDescription" xml:space="preserve">
    <value>2 No hay un grupo predefinido de preguntas que deba usar. {0}Recopile preguntas que se ajusten a su contexto{1}.</value>
  </data>
  <data name="AboutHeader" xml:space="preserve">
    <value>Acerca de Scripture Forge</value>
  </data>
  <data name="AboutParatext" xml:space="preserve">
    <value>Funciona con el Paratext</value>
  </data>
  <data name="AboutParatextDescription" xml:space="preserve">
    <value>1 Simplemente {0}conecte su proyecto de Paratext{1} para empezar. {0}Sincronize{1} su proyecto para mantenerlo actualizado con Paratext y enviar las respuestas de los usuarios a las Notas de Paratext.</value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>Extienda su alcance con la verificación de las Escrituras</value>
  </data>
  <data name="AboutUserEngagement" xml:space="preserve">
    <value>Compromiso del usuario</value>
  </data>
  <data name="AboutUserEngagementDescription" xml:space="preserve">
    <value>3 Activar {0}"Compartir"{1} para permitir a los usuarios invitar a un amigo a unirse a tu campaña o mantener los comentarios a un grupo definido. Los usuarios pueden contestar preguntas, comentar las respuestas y dar me gusta a las respuestas de otros.</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Un conjunto de herramientas gratuitas para hacer más con su proyecto de Paratext, dondequiera que esté. </value>
  </data>
  <data name="EngageChecking" xml:space="preserve">
    <value>Realizar la comprobación con la comunidad</value>
  </data>
  <data name="EngageCollaborate" xml:space="preserve">
    <value>Colaborar en las Escrituras</value>
  </data>
  <data name="EngageSuggestions" xml:space="preserve">
    <value>Reciba sugerencias mientras escribe</value>
  </data>
  <data name="EngageTitle" xml:space="preserve">
    <value>Interactuar con la comunidad lingüística. Colabore con sus compañeros.</value>
  </data>
</root>
