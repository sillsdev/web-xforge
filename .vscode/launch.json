{
  "version": "0.2.0",
  "compounds": [
    {
      "name": "Launch Chromium, run and debug frontend and backend",
      "configurations": ["Run and debug backend", "Launch Chromium and debug the running frontend"]
    }
  ],
  "configurations": [

    {
      // Attach to Chromium and debug the running frontend.
      // This also works with Edge. Type doesn't seem to need to be "pwa-msedge" to attach with Edge.
      // First you need to launch Chromium/Chrome or Edge with --remote-debugging-port=9977. The SF frontend must also be running/accessible.
      "name": "Attach to frontend (in a running Chromium)",
      "port": 9977,
      "request": "attach",
      "type": "pwa-chrome",
      "webRoot": "${workspaceRoot}/src/SIL.XForge.Scripture/ClientApp",
    },
    {
      // Attach to and debug the running backend
      "name": "Attach to backend",
      "type": "coreclr",
      "request": "attach",
      "processName": "SIL.XForge.Scripture"
    },
    {
      // Attach to Chromium and debug the running frontend tests
      // First you need to launch the test runner, such as by: cd ClientApp && npm test -- --include src/app/shared/text/text.component.spec.ts
      "name": "Attach to frontend tests (via Karma in Chromium)",
      "port": 9988,
      "request": "attach",
      "type": "pwa-chrome",
      "webRoot": "${workspaceFolder}/src/SIL.XForge.Scripture/ClientApp",
      "sourceMaps": true,
      "pathMapping": {
        "/_karma_webpack_": "${workspaceFolder}/src/SIL.XForge.Scripture/ClientApp"
      },
    },
    {
      "name": "Run and debug RealtimeServer tests",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/src/RealtimeServer/node_modules/.bin/jest",
      "args": ["--runInBand"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "disableOptimisticBPs": true,
      "cwd": "${workspaceFolder}/src/RealtimeServer",
      "windows": {
        "program": "${workspaceFolder}/src/RealtimeServer/node_modules/jest/bin/jest"
      }
    },
    {
      "name": "Launch Chromium and debug the running frontend",
      "type": "pwa-chrome",
      "request": "launch",
      "url": "http://localhost:5000",
      "webRoot": "${workspaceRoot}/src/SIL.XForge.Scripture/ClientApp",
      "linux": {
        "name": "",
        "type": "pwa-chrome",
        "request": "launch",
        "runtimeExecutable": "/usr/bin/chromium-browser"
      }
    },
    {
      "name": "Run and debug backend",
      "type": "coreclr",
      "request": "launch",
      "preLaunchTask": "dotnet build",
      "program": "${workspaceRoot}/src/SIL.XForge.Scripture/bin/Debug/net6.0/SIL.XForge.Scripture.dll",
      "args": ["--start-ng-serve=listen"],
      "cwd": "${workspaceRoot}/src/SIL.XForge.Scripture/",
      "stopAtEntry": false,
      "console": "integratedTerminal",
      "env": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    {
      "name": "Run frontend, run and debug backend",
      "type": "coreclr",
      "request": "launch",
      "preLaunchTask": "dotnet build",
      "program": "${workspaceRoot}/src/SIL.XForge.Scripture/bin/Debug/net6.0/SIL.XForge.Scripture.dll",
      "args": ["--start-ng-serve=yes"],
      "cwd": "${workspaceRoot}/src/SIL.XForge.Scripture/",
      "stopAtEntry": false,
      "console": "integratedTerminal",
      "env": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    {
      // VSCode may complain about startup errors, but you may be successful to Debug Anyway.
      "name": "Launch Chrome and run and debug frontend",
      "type": "pwa-chrome",
      "request": "launch",
      "preLaunchTask": "npm start (SF)",
      "url": "http://localhost:5000",
      "webRoot": "${workspaceRoot}/src/SIL.XForge.Scripture/ClientApp",
      "linux": {
        "runtimeExecutable": "/usr/bin/chromium-browser"
      }
    },
    {
      "type": "node",
      "request": "attach",
      "name": "Node",
      "port": 9230
    },
    {
      "name": "Launch Chromium and run and debug current spec",
      "type": "chrome",
      "request": "launch",
      "preLaunchTask": "npm test active spec (SF)",
      "url": "http://localhost:9876/debug.html",
      "port": 9988,
      "webRoot": "${workspaceFolder}/src/SIL.XForge.Scripture/ClientApp",
      "sourceMaps": true,
      "pathMapping": {
        "/_karma_webpack_": "${workspaceFolder}/src/SIL.XForge.Scripture/ClientApp"
      },
      "linux": {
        "runtimeExecutable": "/usr/bin/chromium-browser"
      }
    },
    {
      "name": "Migration Sync User",
      "type": "coreclr",
      "request": "launch",
      "preLaunchTask": "build-migrator-sync-user-to-pt-user",
      "program": "${workspaceRoot}/src/Migrations/SyncUserToPTUser/bin/Debug/net6.0/SyncUserToPTUser.dll",
      "cwd": "${workspaceRoot}/src/Migrations/SyncUserToPTUser",
      "stopAtEntry": false,
      "console": "integratedTerminal",
      "args": ["--start-ng-serve=listen"],
      "env": {
        "ASPNETCORE_ENVIRONMENT": "Development",
        // "SYNC_USER_PROJECT_IDS": "6201831c0e13de5c38e0ed7d",
        "SYNC_USER_MODE_RUN": "true"
      }
    }
    // {
    //   "name": "Migration Foo",
    //   "type": "coreclr",
    //   "request": "launch",
    //   "preLaunchTask": "build-migrator-foo",
    //   "program": "${workspaceRoot}/src/Migrations/Foo/bin/Debug/net6.0/Foo.dll",
    //   "cwd": "${workspaceRoot}/src/Migrations/Foo",
    //   "stopAtEntry": false,
    //   "console": "integratedTerminal",
    //   "args": ["--start-ng-serve=listen"],
    //   "env": {
    //     "ASPNETCORE_ENVIRONMENT": "Development"
    //   }
    // },
  ]
}
