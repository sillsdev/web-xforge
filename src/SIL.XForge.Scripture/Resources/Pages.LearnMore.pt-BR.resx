<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LearnCheckingHow" xml:space="preserve">
    <value>Learn how to set up and use {0}Community Checking{1}.</value>
  </data>
  <data name="LearnCheckingTitle" xml:space="preserve">
    <value>Verificação da Comunidade</value>
  </data>
  <data name="LearnHeader" xml:space="preserve">
    <value>Learn more on Scripture Forge</value>
  </data>
  <data name="LearnSliderCheckingSeeAnswer" xml:space="preserve">
    <value>{0}Answering questions{1} in text and audio form.</value>
  </data>
  <data name="LearnSliderCheckingSeeConnect" xml:space="preserve">
    <value>{0}Connecting to a Scripture Forge project{1} as an invited {2}Community Checker{3}.</value>
  </data>
  <data name="LearnSliderCheckingSeeDescription" xml:space="preserve">
    <value>{0}Community Checkers{1} and {0}Administrators{1} should {2}watch this video{3} to see how {0}Community Checkers{1} can answer questions and interact with each other. It covers:</value>
  </data>
  <data name="LearnSliderCheckingSeeHeader" xml:space="preserve">
    <value>Watch How Community Checking Works</value>
  </data>
  <data name="LearnSliderCheckingSeeInteract" xml:space="preserve">
    <value>{0}Interacting{1} with other {2}Community Checkers{3} by adding comments to their answers.</value>
  </data>
  <data name="LearnSliderCheckingSeeReference" xml:space="preserve">
    <value>{0}Selecting Scripture{1} to reference with answers.</value>
  </data>
  <data name="LearnSliderCheckingSetupAddQuestions" xml:space="preserve">
    <value>{0}Adding questions{1} to be checked by the community (these can feature audio recordings of the relevant Scripture, or the question itself).</value>
  </data>
  <data name="LearnSliderCheckingSetupConnect" xml:space="preserve">
    <value>{0}Connecting to a Paratext project{1} in Scripture Forge.</value>
  </data>
  <data name="LearnSliderCheckingSetupDescription" xml:space="preserve">
    <value>Paratext project {0}Administrators{1} can {2}watch this video{3} to learn about setting up {0}Community Checking{1}. It covers:</value>
  </data>
  <data name="LearnSliderCheckingSetupHeader" xml:space="preserve">
    <value>Setting Up Community Checking</value>
  </data>
  <data name="LearnSliderCheckingSetupShare" xml:space="preserve">
    <value>{0}Sharing the project{1} by inviting {2}Community Checkers{3} to answer questions.</value>
  </data>
  <data name="LearnSliderCheckingSetupSync" xml:space="preserve">
    <value>{0}Synchronizing{1} the {2}Community Checkers'{3} answers with Paratext.</value>
  </data>
  <data name="LearnSliderSuggestionSetupBased" xml:space="preserve">
    <value>Select a project the translation is {0}Based on{1} and the intelligent suggestion engine can be trained to {2}provide helpful translation suggestions{3}.</value>
  </data>
  <data name="LearnSliderSuggestionSetupBest" xml:space="preserve">
    <value>Most effective on {0}closely related projects{1} with similar grammar and style of translation, such as adaptation projects.</value>
  </data>
  <data name="LearnSliderSuggestionSetupDescription" xml:space="preserve">
    <value>{0}Administrators{1} can enable {2}Translation Suggestions{3} to assist {0}Translators{1}.</value>
  </data>
  <data name="LearnSliderSuggestionSetupHeader" xml:space="preserve">
    <value>Setting Up Translation Suggestions</value>
  </data>
  <data name="LearnSliderSuggestionAcceptDescription" xml:space="preserve">
    <value>With the suggestion engine set up and trained, Scripture Forge may offer {0}Translators{1} suggestions as they type.</value>
  </data>
  <data name="LearnSliderSuggestionAcceptEnter" xml:space="preserve">
    <value>Simply hit {0}ENTER{1} or click on the suggestion to accept it, or hit {0}ESC{1} or continue typing to ignore it.</value>
  </data>
  <data name="LearnSliderSuggestionAcceptHeader" xml:space="preserve">
    <value>Accepting a Translation Suggestion</value>
  </data>
  <data name="LearnSliderSuggestionAcceptLearn" xml:space="preserve">
    <value>The {0}suggestion engine learns{1} and provides better suggestions as each verse is translated.</value>
  </data>
  <data name="LearnSliderSuggestionAcceptReceive" xml:space="preserve">
    <value>{0}Translators{1} can {2}receive suggestions{3} about how to translate the next word or phrase, as they type.</value>
  </data>
  <data name="LearnSliderTranslateEditDescription" xml:space="preserve">
    <value>{0}Administrators{1} can connect a Paratext project to Scripture Forge to edit Scripture as they would in Paratext, while {2}benefiting from increased collaboration{3} options.</value>
  </data>
  <data name="LearnSliderTranslateEditHeader" xml:space="preserve">
    <value>Editing Scripture</value>
  </data>
  <data name="LearnSliderTranslateEditScripture" xml:space="preserve">
    <value>{0}Edit Scripture{1} in Scripture Forge as you would in Paratext’s {2}Basic{3} view.</value>
  </data>
  <data name="LearnSliderTranslateEditSync" xml:space="preserve">
    <value>{0}Synchronize{1} your Scripture Forge project with Paratext to keep your work up to date.</value>
  </data>
  <data name="LearnSliderTranslateCollaborateDescription" xml:space="preserve">
    <value>{0}Translators{1} can work on projects collaboratively, {2}editing Scripture at the same time{3}.</value>
  </data>
  <data name="LearnSliderTranslateCollaborateHeader" xml:space="preserve">
    <value>Collaborating on Scripture</value>
  </data>
  <data name="LearnSliderTranslateCollaborateLocation" xml:space="preserve">
    <value>Work with {0}Translators{1} in {2}multiple locations{3} on the same project.</value>
  </data>
  <data name="LearnSliderTranslateCollaborateRealtime" xml:space="preserve">
    <value>See other {0}Translators'{1} {2}edits in real time{3}, as they type.</value>
  </data>
  <data name="LearnSliderTranslateCollaborateVerse" xml:space="preserve">
    <value>Collaborate on the same book, same chapter, or {0}even the same verse{1}.</value>
  </data>
  <data name="LearnTranslateHow" xml:space="preserve">
    <value>Learn how to edit Scripture collaboratively and use translation suggestions.</value>
  </data>
  <data name="LearnTranslateTitle" xml:space="preserve">
    <value>Translation</value>
  </data>
  <data name="ReadyToTry" xml:space="preserve">
    <value>Ready to try Scripture Forge?</value>
  </data>
</root>
