@use '@material/icon-button/mixins' as icon-button;
@use "@material/typography/mixins" as typography;
@use '@material/linear-progress/mixins' as linear-progress;
@use '@material/top-app-bar/variables' as top-app-bar;

@import 'bootstrap/scss/mixins/breakpoints';

@import 'src/variables';

:host {
  display: flex;
  height: 100vh;
  position: relative;

  > mdc-linear-progress {
    position: absolute;
    z-index: 10;

    ::ng-deep {
      @include linear-progress.bar-color($mdc-theme-secondary);
    }
  }

  > mdc-drawer {
    > mdc-drawer-header {
      padding: 0;

      > .project-select {
        ::ng-deep .mdc-select__anchor {
          width: 100%;
        }

        // Override styles spilling from mdc-drawer to mdc-select (both mdc-drawer and mdc-select can contain
        // mdc-list-item and it appears the styles applied for the drawer's list items are now styling the select menu).
        .mdc-list-item {
          @include typography.typography(subtitle1);
          margin: 0;
          border-radius: 0;
          padding: 0 16px;
          height: unset;
          min-height: 48px;
        }
        .mdc-list-divider {
          margin: 8px 0;
        }
      }
    }
  }

  .mdc-list-item {
    cursor: pointer;
    &:hover,
    &.mdc-list-item--activated {
      mdc-icon {
        color: $purpleLight;
        fill: $purpleLight;
      }
    }
    mdc-icon {
      color: $purpleMedium;
      fill: $purpleMedium;
      transition: color 0.15s;
    }
    mdc-icon:first-child {
      margin-right: 24px;
      &.ngx-mdc-icon {
        width: 24px;
        height: 24px;
      }
    }
  }

  > header {
    position: absolute;

    &.overlay-drawer {
      z-index: 7;
    }

    mdc-top-app-bar-title {
      cursor: pointer;
    }

    mdc-top-app-bar-section {
      mdc-menu {
        min-width: 200px;
        text-align: left; // Needed for some menu items in Chrome but not Firefox
        a {
          width: 100%;
          color: var(--mdc-theme-text-primary-on-background);
        }
        .version {
          color: var(--mdc-theme-text-secondary-on-background);
        }
      }
      &.display-behind {
        z-index: 0;
      }
    }

    .mdc-top-app-bar--short-collapsed {
      width: 255px !important;
    }

    .mdc-top-app-bar__row {
      height: 56px;
    }

    .mdc-top-app-bar__section {
      padding: 4px;
      .refresh-message {
        margin: auto;
        padding: 0px 8px;
      }
      .mat-raised-button {
        margin-right: 8px;
      }
    }
  }

  .mdc-top-app-bar-adjust {
    margin-top: top-app-bar.$mobile-row-height;
  }

  .mdc-top-app-bar-adjust-double {
    margin-top: top-app-bar.$mobile-row-height * 2;
  }

  .app-content {
    display: flex;
    flex-direction: column;
    flex: 1;
    overflow-y: auto;
    overflow-x: hidden;

    > div {
      flex: 1;
      padding: 14px 20px;
      @include media-breakpoint-only(xs) {
        padding: 10px;
      }
      display: flex;
      flex-direction: column;
    }
  }
}

.user-menu-name {
  white-space: nowrap;
  color: $purpleLight;
}
#edit-name-btn {
  color: $purpleLight;
}

a {
  text-decoration: none;
}

.checking-unavailable {
  text-align: center;
}

.avatar-icon {
  @include icon-button.icon-size(32px, 32px, 8px);
}

.locale-disabled::after {
  content: ' *';
}

.active-locale {
  font-weight: bold;
}

.locale-menu {
  mdc-list-item:not(.active-locale) mdc-icon {
    visibility: hidden;
  }
  mdc-icon {
    margin-right: 0.5em;
  }
}

.locale-menu .mdc-list-item {
  white-space: nowrap;
  font-family: $languageFonts;
}

.online-status {
  padding-bottom: 8px;
  mdc-icon {
    margin-right: 10px;
  }
}

:host,
.mdc-menu {
  .mdc-list-item.list-item-disabled {
    &,
    mdc-icon {
      color: var(--mdc-theme-text-disabled-on-background);
      fill: var(--mdc-theme-text-disabled-on-background);
    }
  }
}
