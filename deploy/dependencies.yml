---
- name: Deploy development environment for beta.scriptureforge.org
  hosts: all
  become: yes
  vars_files:
    - "vars/config_{{config}}.yml"
    # conditional import
    - - "vars/{{ansible_distribution}}-{{ansible_distribution_major_version | int}}.yml"
      - "vars/{{ansible_distribution}}.yml"
      - "vars/{{ansible_os_family}}.yml"
      - "vars/os_defaults.yml"
  vars:
    node_version: 12.18.4
    mongodb_version: 4.0
    repo_path: "{{playbook_dir}}/.."
  pre_tasks:
    - name: "Add .NET Core | add key"
      apt_key:
        id: BE1229CF
        url: https://packages.microsoft.com/keys/microsoft.asc
        keyring: /etc/apt/trusted.gpg.d/microsoft.gpg
      when: base_distribution == 'ubuntu'
    - name: "Add .NET Core | add source"
      apt_repository:
        repo: "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-{{base_distribution_release}}-prod {{base_distribution_release}} main"
        state: present
      when: base_distribution == 'ubuntu'
    - name: add Mongo apt key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 9DA31620334BD75D9DCB49F368818C72E52529D4
    - name: add Mongo {{mongodb_version}} repository
      apt_repository:
        repo: "deb [arch=amd64] http://repo.mongodb.org/apt/ubuntu {{base_distribution_release}}/mongodb-org/{{mongodb_version}} multiverse"
        filename: mongodb-org
        update_cache: yes
      when: base_distribution == 'ubuntu' and (base_distribution_release == 'xenial' or base_distribution_release == 'bionic')
  tasks:
    - name: install packages
      apt:
        name:
          - "dotnet-sdk-3.1"
          - ffmpeg
          - "mongodb-org"
          - nodejs
          - npm
        update_cache: yes
      tags: ["packages"]

    - name: Get npm prefix
      command: "npm config get prefix"
      register: npm_prefix
      changed_when: False

    - name: Set npm prefix
      command: "npm config set prefix /usr/local"
      when: npm_prefix.stdout != "/usr/local"

    - name: install n
      npm:
        name: n
        path: "{{repo_path}}/src/SIL.XForge.Scripture/ClientApp"
        state: latest
        global: yes

    - name: check current node version
      shell: node --version || echo error
      register: node_version_installed
      changed_when: False

    - name: set node version
      command: "n {{node_version}}"
      when: "node_version_installed.stdout != 'v' + node_version"

    # Install mercurial 4.7+ from system or pip
    - name: install pip mercurial dependencies
      apt:
        name:
          - python-pip
          - python2.7
      when: ansible_distribution_major_version|int < 20
    - name: install pip mercurial
      pip:
        name: mercurial
        version: 4.8.2
      when: ansible_distribution_major_version|int < 20
    - name: install system package mercurial
      apt:
        name:
          - mercurial
      when: ansible_distribution_major_version|int >= 20

    - name: update the mongo config file
      lineinfile:
        path: /etc/mongod.conf
        regexp: '^(\s*dbPath: ).*$'
        line: '\1{{mongo_path}}'
        backrefs: yes
      notify: restart mongod
    - name: ensure mongod service is running (and enable it at boot)
      # Note that the mongodb-org packages install a service named "mongod", not "mongodb"
      service:
        name: mongod
        state: started
        enabled: yes

    - name: Add folders
      file:
        path: "{{item}}"
        state: directory
        owner: "{{lookup('env','USER')}}"
        mode: "u=rwX,g=rX,o=rX"
      with_items:
        - "/var/lib/scriptureforge"
        - "/var/lib/scriptureforge/sync"
        - "/var/lib/scriptureforge/audio"
        - "/var/lib/xforge"
        - "/var/lib/xforge/avatars"
        - "{{lookup('env','HOME')}}/.local/share/SIL/WritingSystemRepository/3"

    - name: add localhost to dnsmasq
      lineinfile:
        path: /etc/NetworkManager/dnsmasq.d/localhost-domain
        line: "{{item}}"
        state: present
        create: yes
        mode: "u=rw,g=r,o=r"
      with_items:
        - "address=/localhost/127.0.0.1"
        - "address=/localhost/::1"
      when: inventory_hostname == "localhost" and base_distribution_release == 'xenial'
      notify: restart network
      tags: ["network"]

    - name: Enable convenient access to ng + npm from commandline | bin dir
      become: no
      file:
        path: "{{lookup('env','HOME')}}/bin"
        state: directory
      when: inventory_hostname == "localhost"
    - name: Enable convenient access to ng from commandline | symlink
      become: no
      file:
        src: "{{repo_path}}/src/SIL.XForge.Scripture/ClientApp/node_modules/.bin/ng"
        path: "{{lookup('env','HOME')}}/bin/ng"
        state: link
        force: yes
        follow: no
      when: inventory_hostname == "localhost"
    - name: Enable convenient access to npm from commandline | symlink
      become: no
      file:
        src: "{{repo_path}}/src/SIL.XForge.Scripture/ClientApp/node_modules/.bin/npm"
        path: "{{lookup('env','HOME')}}/bin/npm"
        state: link
        force: yes
        follow: no
      when: inventory_hostname == "localhost"

    - name: Use chromium for unit tests
      become: no
      lineinfile:
        path: "{{lookup('env','HOME')}}/.pam_environment"
        line: "CHROME_BIN=chromium-browser"
        create: yes

    - name: Install/update reportgenerator
      become: no
      shell: dotnet tool install -g dotnet-reportgenerator-globaltool || dotnet tool update -g dotnet-reportgenerator-globaltool

    - name: Set initial PT connection settings
      become: no
      copy:
        src: InternetSettings.xml
        dest: ~/.local/share/Paratext92/

  handlers:
    - name: restart mongod
      service: name=mongod state=restarted

    - name: restart network
      service: name=network-manager state=restarted
