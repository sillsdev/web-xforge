@use 'sass:map';
@use '@angular/material' as mat;
@use 'src/app/my-projects/my-projects-theme' as sf-my-projects;
@use 'src/app/app-theme' as sf-app;
@use 'src/app/checking/checking/checking-theme' as sf-checking;
@use 'src/app/checking/checking/checking-answers/checking-answers-theme' as sf-checking-answer;
@use 'src/app/checking/checking/checking-answers/checking-comments/checking-comments-theme' as sf-checking-comments;
@use 'src/app/checking/checking/checking-questions/checking-questions-theme' as sf-checking-questions;
@use 'src/app/navigation/navigation-theme' as sf-navigation;
@use 'src/app/shared/sf-tab-group/sf-tab-group-theme' as sf-tab-group;
@use 'src/app/shared/book-multi-select/book-multi-select-theme' as sf-book-multi-select;
@use 'src/app/translate/draft-generation/draft-generation-steps/draft-generation-steps-theme' as
  sf-draft-generation-steps;
@use 'src/app/translate/draft-generation/confirm-sources/confirm-sources-theme' as sf-confirm-sources;
@use 'src/app/translate/draft-generation/draft-sources/draft-sources-theme' as sf-draft-sources;

@mixin theme($theme) {
  $is-dark: mat.get-theme-type($theme) == dark;

  // Global styles
  @include mat.system-level-colors($theme);

  // Custom components
  @include sf-app.theme($theme);
  @include sf-book-multi-select.theme($theme);
  @include sf-checking.theme($theme);
  @include sf-checking-answer.theme($theme);
  @include sf-checking-comments.theme($theme);
  @include sf-checking-questions.theme($theme);
  @include sf-confirm-sources.theme($theme);
  @include sf-draft-generation-steps.theme($theme);
  @include sf-draft-sources.theme($theme);
  @include sf-my-projects.theme($theme);
  @include sf-navigation.theme($theme);
  @include sf-tab-group.theme($theme);

  // Custom variables
  --sf-disabled-foreground: #{mat.get-theme-color($theme, neutral, 70)};
  --sf-border-color: #{mat.get-theme-color($theme, neutral, if($is-dark, 60, 90))};
  --sf-error-foreground: #{mat.get-theme-color($theme, error, if($is-dark, 80, 40))};
  --sf-language-font-family: language_picker, language_picker_fallback, Arial, Helvetica, sans-serif;

  a:not(.mdc-button):not(.mat-mdc-menu-item) {
    color: mat.get-theme-color($theme, primary, if($is-dark, 80, 40));
    &:hover {
      color: mat.get-theme-color($theme, primary, 60);
    }
    &:visited {
      color: mat.get-theme-color($theme, primary, 60);
    }
    &:visited:hover {
      color: mat.get-theme-color($theme, primary, 70);
    }
  }

  // Overwrite component styles
  @include mat.card-overrides(
    (
      title-text-size: 24px
    )
  );

  @include mat.dialog-overrides(
    (
      container-max-width: initial,
      container-color: mat.get-theme-color($theme, neutral, if($is-dark, 20, 100))
    )
  );

  @include mat.expansion-overrides(
    (
      container-background-color: mat.get-theme-color($theme, neutral, if($is-dark, 20, 98))
    )
  );

  @include mat.sidenav-overrides(
    (
      container-width: auto,
      container-background-color: mat.get-theme-color($theme, neutral, if($is-dark, 10, 98))
    )
  );

  @include mat.stepper-overrides(
    (
      container-color: transparent
    )
  );

  @include mat.toolbar-overrides(
    (
      container-background-color: mat.get-theme-color($theme, primary, 10),
      container-text-color: mat.get-theme-color($theme, primary, 100)
    )
  );
  @if not $is-dark {
    mat-toolbar {
      @include mat.icon-overrides(
        (
          color: mat.get-theme-color($theme, primary, 100)
        )
      );
    }
  }
}
