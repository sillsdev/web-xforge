<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AudioOnlyQuestion" xml:space="preserve">
    <value>- {0} question en audio uniquement -</value>
    <comment>Text to show in Paratext Notes when question is audio-only</comment>
  </data>
  <data name="AudioOnlyResponse" xml:space="preserve">
    <value>- {0} réponse en audio uniquement -</value>
    <comment>Text to show in Paratext Notes when response is audio-only</comment>
  </data>
  <data name="EmailBad" xml:space="preserve">
    <value>Entrez une adresse e-mail valide</value>
  </data>
  <data name="EmailMissing" xml:space="preserve">
    <value>Entrez votre adresse e-mail</value>
  </data>
  <data name="InviteEmailOption" xml:space="preserve">
    <value>Entrez votre adresse e-mail et un nouveau mot de passe {0} pour votre compte et cliquez sur Inscription.</value>
  </data>
  <data name="InviteFacebookOption" xml:space="preserve">
    <value>Cliquez sur {0}Inscription via Facebook{1} et suivez les instructions pour accéder à {2} en utilisant un compte Facebook existant, ou</value>
  </data>
  <data name="InviteGoogleOption" xml:space="preserve">
    <value>Cliquez sur {0}Inscription via Google{1} et suivez les instructions pour accéder à {2} en utilisant un compte Google existant (comme Gmail), ou</value>
  </data>
  <data name="InviteGreeting" xml:space="preserve">
    <value>Bonjour,{0}{1} vous invite à rejoindre le projet {2} sur {3}.{0}Cliquez simplement sur le lien ci-dessous, choisissez comment vous connecter, et vous serez prêt à commencer.{0}{0}Pour vous inscrire, allez sur {4}</value>
  </data>
  <data name="InviteInstructions" xml:space="preserve">
    <value>Si vous n'êtes pas déjà un utilisateur {0}, alors après avoir cliqué sur le lien, cliquez sur {1}Inscrivez-vous{2} et faites l'une des choses suivantes :</value>
  </data>
  <data name="InviteLinkSharingOff" xml:space="preserve">
    <value>Ce lien fonctionnera seulement pour cette adresse e-mail.</value>
    <comment>Previously this text was used when link sharing was turned off for a project, but now it is always used when sending an invitation whether link sharing is on or off.</comment>
  </data>
  <data name="InvitePTOption" xml:space="preserve">
    <value>Cliquez sur {0}Inscription via Paratext{1} et suivez les instructions pour accéder à {2} en utilisant un compte Paratext existant, ou</value>
  </data>
  <data name="InviteSignature" xml:space="preserve">
    <value>Cordialement,{0}l'équipe {1}</value>
  </data>
  <data name="InviteSubject" xml:space="preserve">
    <value>Vous avez été invité dans le projet {0} sur {1}</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Langue</value>
    <comment>Tool tip for the language selector</comment>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>En savoir plus</value>
    <comment>Link to the learn more page seen in the page footer and as button at the bottom of the home page</comment>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Connexion</value>
    <comment>Log In button label</comment>
  </data>
  <data name="MessageMissing" xml:space="preserve">
    <value>Expliquez-nous pourquoi vous voulez utiliser Scripture Forge</value>
  </data>
  <data name="NameMissing" xml:space="preserve">
    <value>Entrez votre nom</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Confidentialité</value>
    <comment>Link to the Privacy policy seen in the page footer</comment>
  </data>
  <data name="RoleMissing" xml:space="preserve">
    <value>Sélectionnez votre rôle dans le projet linguistique</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>S'inscrire</value>
    <comment>Sign Up button label</comment>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>Termes et conditions</value>
    <comment>Link to the Terms of service seen in the page footer</comment>
  </data>
  <data name="UserMissing" xml:space="preserve">
    <value>L'utilisateur n'existe pas encore.</value>
  </data>
</root>
