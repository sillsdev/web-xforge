name: "Increment version"

on:
  workflow_call:
    inputs:
      deployment-type:
        description: "The type of deployment. Options: production, staging."
        required: true
        type: string
      release-type:
        description: "The type of release, if production. This will bump the major.minor.patch version number accordingly. Options: major, minor, patch. Default: patch."
        required: false
        type: string
        default: "patch"
      tag_prefix:
        description: "The prefix of the VCS tags, such as 'ABCv' or 'DEFv'."
        required: true
        type: string
    outputs:
      next_version:
        description: "The next version number."
        value: ${{ jobs.deploy.outputs.next_version }}

jobs:
  deploy:
    name: "Increment version"
    runs-on: ubuntu-latest
    outputs:
      next_version: ${{ steps.compute_next_version.outputs.next_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Compute next version
        id: compute_next_version
        working-directory: .github/workflows
        run: |
          python3 << EOF
          import os
          import utils

          deployment_type = os.getenv('DEPLOYMENT_TYPE')
          release_type = os.getenv('RELEASE_TYPE')
          tag_prefix = os.getenv('TAG_PREFIX')

          latest_tag = utils.get_latest_tag(tag_prefix)

          if deployment_type == 'production':
            next_version = utils.increment_production_version(latest_tag, release_type, tag_prefix)
          else:
            next_version = utils.increment_staging_version(latest_tag, tag_prefix)

          with open(os.getenv('GITHUB_OUTPUT'), 'a') as file:
            file.write(f'next_version={next_version}')
          EOF
        env:
          DEPLOYMENT_TYPE: "${{ inputs.deployment-type }}"
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}
          TAG_PREFIX: ${{ github.event.inputs.tag_prefix }}
