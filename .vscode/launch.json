{
  "version": "0.2.0",
  "compounds": [
    {
      "name": "Launch Chromium, run and debug frontend and backend",
      "configurations": ["Run and debug backend", "Launch Chromium and debug the running frontend"]
    }
  ],
  "configurations": [
    {
      // Attach to Chromium and debug the running frontend.
      // This also works with Edge. Type doesn't seem to need to be "pwa-msedge" to attach with Edge.
      // First you need to launch Chromium/Chrome or Edge with --remote-debugging-port=9977. The SF frontend must
      // also be running/accessible.
      "name": "Attach to frontend (in a running Chromium) (inc Docker)",
      "port": 9977,
      "request": "attach",
      "type": "pwa-chrome",
      "webRoot": "${workspaceRoot}/src/SIL.XForge.Scripture/ClientApp",
      "sourceMaps": true,
      "skipFiles": ["**/node_modules/**"]
    },
    {
      // Attach to and debug the running backend
      "name": "Attach to backend dotnet application",
      "type": "coreclr",
      "request": "attach",
      "processName": "SIL.XForge.Scripture"
    },
    {
      // Attach to and debug the running realtime server. The dotnet backend needs to have been started with
      // --node-options=--inspect=9230 or --node-options=--inspect-brk=9230
      // While this can attach to realtime server in Docker, the source maps do not seem to be working.
      "name": "Attach to backend realtime server (inc Docker)",
      "request": "attach",
      "type": "node",
      "port": 9230
    },
    {
      // Attach to Chromium and debug the running frontend tests
      // First you need to launch the test runner, such as by:
      // cd ClientApp && npm test -- --include src/app/shared/text/text.component.spec.ts
      "name": "Attach to frontend tests (via Karma in Chromium)",
      "port": 9988,
      "request": "attach",
      "type": "pwa-chrome",
      "webRoot": "${workspaceFolder}/src/SIL.XForge.Scripture/ClientApp",
      "sourceMaps": true,
      "pathMapping": {
        "/_karma_webpack_": "${workspaceFolder}/src/SIL.XForge.Scripture/ClientApp"
      },
      "skipFiles": ["**/node_modules/**"]
    },
    {
      "name": "Docker: Attach to backend dotnet application",
      "type": "docker",
      "request": "attach",
      "platform": "netCore",
      "containerName": "web-xforge",
      "processName": "dotnet",
      "sourceFileMap": {
        "/src": "${workspaceFolder}/src"
      }
    },
    {
      "name": "Run and debug RealtimeServer tests",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/src/RealtimeServer/node_modules/.bin/jest",
      "args": ["--runInBand"],
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "disableOptimisticBPs": true,
      "cwd": "${workspaceFolder}/src/RealtimeServer",
      "windows": {
        "program": "${workspaceFolder}/src/RealtimeServer/node_modules/jest/bin/jest"
      }
    },
    {
      "name": "Launch Chromium and debug the running frontend",
      "type": "pwa-chrome",
      "request": "launch",
      "url": "http://localhost:5000",
      "webRoot": "${workspaceRoot}/src/SIL.XForge.Scripture/ClientApp",
      "linux": {
        "name": "",
        "type": "pwa-chrome",
        "request": "launch",
        "runtimeExecutable": "/usr/bin/chromium-browser"
      }
    },
    {
      "name": "Run and debug backend",
      "type": "coreclr",
      "request": "launch",
      "preLaunchTask": "dotnet build",
      "program": "${workspaceRoot}/src/SIL.XForge.Scripture/bin/Debug/net8.0/SIL.XForge.Scripture.dll",
      "args": ["--start-ng-serve=listen", "--node-options=--inspect=9230"],
      "cwd": "${workspaceRoot}/src/SIL.XForge.Scripture/",
      "stopAtEntry": false,
      "console": "integratedTerminal",
      "env": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    {
      "name": "Run frontend, run and debug backend",
      "type": "coreclr",
      "request": "launch",
      "preLaunchTask": "dotnet build",
      "program": "${workspaceRoot}/src/SIL.XForge.Scripture/bin/Debug/net8.0/SIL.XForge.Scripture.dll",
      "args": ["--start-ng-serve=yes"],
      "cwd": "${workspaceRoot}/src/SIL.XForge.Scripture/",
      "stopAtEntry": false,
      "console": "integratedTerminal",
      "env": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    {
      // VSCode may complain about startup errors, but you may be successful to Debug Anyway.
      "name": "Launch Chrome and run and debug frontend",
      "type": "pwa-chrome",
      "request": "launch",
      "preLaunchTask": "npm start (SF)",
      "url": "http://localhost:5000",
      "webRoot": "${workspaceRoot}/src/SIL.XForge.Scripture/ClientApp",
      "linux": {
        "runtimeExecutable": "/usr/bin/chromium-browser"
      }
    },
    {
      "type": "node",
      "request": "attach",
      "name": "Node",
      "port": 9230
    },
    {
      "name": "Launch Chromium and run and debug current spec",
      "type": "chrome",
      "request": "launch",
      "preLaunchTask": "npm test active spec (SF)",
      "url": "http://localhost:9876/debug.html",
      "port": 9988,
      "webRoot": "${workspaceFolder}/src/SIL.XForge.Scripture/ClientApp",
      "sourceMaps": true,
      "pathMapping": {
        "/_karma_webpack_": "${workspaceFolder}/src/SIL.XForge.Scripture/ClientApp"
      },
      "linux": {
        "runtimeExecutable": "/usr/bin/chromium-browser"
      }
    },
    {
      "name": "Run and debug current ts-node script",
      "type": "node",
      "request": "launch",
      "cwd": "${fileDirname}",
      "runtimeArgs": ["-r", "ts-node/register", "--inspect"],
      "args": ["${file}"]
    },
    {
      "name": "Migration",
      "type": "coreclr",
      "request": "launch",
      "preLaunchTask": "build-migrator",
      // This build target can be adjusted to a newer migration being worked on by changing the path in 'program', and in the tasks.json build-migrator 'cwd'.
      "program": "${workspaceRoot}/src/Migrations/WhitespaceRestoreMigration/bin/Debug/net8.0/WhitespaceRestoreMigration.dll",
      "stopAtEntry": false,
      "console": "integratedTerminal",
      "args": ["read", "${workspaceRoot}/src/SIL.XForge.Scripture"],
      "env": {
        // "SF_PROJECT_SET": "544444444444444444444 655555555555555555555",
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  ]
}
