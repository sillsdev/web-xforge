<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContactEmail" xml:space="preserve">
    <value>我们在哪里可以给您发送电子邮件？</value>
  </data>
  <data name="ContactHeader" xml:space="preserve">
    <value>想知道更多？</value>
  </data>
  <data name="ContactName" xml:space="preserve">
    <value>您怎么称呼？请留下您的姓名。</value>
  </data>
  <data name="ContactPrivacy" xml:space="preserve">
    <value>隐私策略</value>
  </data>
  <data name="ContactPurpose" xml:space="preserve">
    <value>您为何要使用圣经锻造？</value>
  </data>
  <data name="ContactRegister" xml:space="preserve">
    <value>向我们发送您的信息，我们将与您联系如何加入Beta。</value>
  </data>
  <data name="ContactRegisterButton" xml:space="preserve">
    <value>登记</value>
  </data>
  <data name="ContactRegisterHeader" xml:space="preserve">
    <value>我什么时候可以开始使用经文锻造？</value>
  </data>
  <data name="ContactRoleLabel" xml:space="preserve">
    <value>您的语言项目角色是什么？</value>
  </data>
  <data name="ContactRoleLTConsultant" xml:space="preserve">
    <value>语言技术顾问</value>
  </data>
  <data name="ContactRoleManager" xml:space="preserve">
    <value>预研项目经理</value>
  </data>
  <data name="ContactRoleOther" xml:space="preserve">
    <value>其他</value>
  </data>
  <data name="ContactRolePTConsultant" xml:space="preserve">
    <value>圣经辅助工具顾问</value>
  </data>
  <data name="ContactRoleTranslator" xml:space="preserve">
    <value>译者</value>
  </data>
  <data name="ContactTitle" xml:space="preserve">
    <value>与我们联络</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>一套免费的工具，无论您身在何处，都可以在您的圣经辅助工具项目中完成更多工作。 </value>
  </data>
  <data name="EngageChecking" xml:space="preserve">
    <value>进行语言社区中的查看</value>
  </data>
  <data name="EngageCollaborate" xml:space="preserve">
    <value>在经文翻译过程中合作</value>
  </data>
  <data name="EngageSuggestions" xml:space="preserve">
    <value>打字获得意见</value>
  </data>
  <data name="EngageTitle" xml:space="preserve">
    <value>与语言社区相除，并与同事们合作。</value>
  </data>
  <data name="RegisterInterest" xml:space="preserve">
    <value>告知您的兴趣</value>
  </data>
</root>
