@use 'src/variables';
@use 'src/xforge-common/media-breakpoints/breakpoints' as *;

:host {
  // Needed to style inside <transloco> element
  ::ng-deep {
    em {
      font-weight: 500;
    }
  }
}

// Manually center over cancel button
app-working-animated-indicator {
  margin-inline-start: 24px;
}

h3 {
  font-size: 20px;
  font-weight: 500;
  display: flex;
  gap: 10px;
}

.requirements {
  p {
    margin: 0 0 8px;
  }

  ul {
    padding-inline-start: 10px;
    margin: 0;
  }

  li {
    display: flex;
    gap: 14px;
    align-items: center;
    margin-bottom: 4px;

    p {
      margin: 0;
    }
  }

  mat-icon {
    flex-shrink: 0;

    &.criteria-met {
      color: green;
    }
    &.criteria-not-met {
      color: variables.$errorColor;
    }
  }
}

app-notice {
  margin-top: 20px;
}

// Hide the tab headers
mat-tab-group {
  ::ng-deep .mat-tab-header {
    display: none;
  }
}

mat-divider.mat-divider-inset {
  margin: 0;
}

.view-or-create-options {
  display: grid;
  grid-template-columns: minmax(0, 500px) 1px minmax(0, 500px);
  gap: 60px;

  mat-divider {
    position: relative;
    margin: 0;

    // 'OR' text
    &::after {
      content: attr(data-text);
      position: absolute;
      top: 30%;
      left: -26px;
      background: #fff;
      padding: 10px;
      font-size: 24px;
      font-weight: 500;
      font-style: italic;
      text-transform: uppercase;
    }
  }

  // Stack the actions vertically with a horizontal divider on mobile
  @include media-breakpoint('<', sm) {
    display: block;

    mat-divider {
      margin: 20px 0;
      border: 0;
      text-align: center;

      // Horizontal line
      &::before {
        content: '';
        position: absolute;
        background-color: #e0e0e0;
        top: 50%;
        left: 0;
        right: 0;
        height: 1px;
      }

      // 'OR' text
      &::after {
        top: 0;
        left: 0;
        position: relative;
        z-index: 1;
      }
    }
  }
}

.button-strip {
  display: flex;
  gap: 20px;
}

.mat-button-base {
  margin-top: 8px;

  ::ng-deep .mat-button-wrapper {
    display: flex;
    align-items: center;
    gap: 6px;
  }
}

@include media-breakpoint('<', sm) {
  // Hide the button icons on side-by-side buttons to save space on mobile
  .button-strip mat-icon {
    display: none;
  }

  // Manually center over cancel button
  app-working-animated-indicator {
    margin-inline-start: 10px;
  }
}

.draft-generation-failed-message {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.error-text {
  color: variables.$errorColor;
}

section {
  padding: 10px 0;
}

.progress-active {
  display: grid;
  grid-template-areas:
    'header progress'
    'text progress'
    'button progress';
  grid-template-columns: minmax(208px, 380px) minmax(100px, 150px);
  place-items: center start;

  h3 {
    grid-area: header;
  }

  .progress-text {
    grid-area: text;
  }

  p:first-child {
    margin-top: 0;
  }

  .button-strip {
    grid-area: button;
  }

  circle-progress {
    grid-area: progress;
    margin: 20px 0 0 20px;
    animation: pulse 1s infinite alternate ease-out;
  }
}

@keyframes pulse {
  from {
    opacity: 0.7;
    transform: scale(1);
  }
  to {
    opacity: 1;
    transform: scale(1.03);
  }
}
