@use 'sass:color';
@use 'sass:list';
@use 'sass:map';
@use '@angular/material' as mat;
@use 'src/variables' as sfColors;
@use 'src/themes/default' as default;

// prettier-ignore
$colors: (
  primary:   (sfColors.$blueMedium, #cfe2fd),
  secondary: (sfColors.$purpleDark, #d6d4e8),
  success:   (#125235, #c4ead9),
  warning:   (#6a5117, #fff3d0),
  error:     (sfColors.$errorColor, #fdafaf),
  info:      (#345564, #d0f4fb),
  light:     (#6a6b6b, #f7f7f7),
  dark:      (#181a1d, #d3d3d4),
);

// Helper function just to clean up the syntax
@function scaleLightness($color, $lightness) {
  @return color.scale($color, $lightness: $lightness);
}

@function create-dark-palette($base-color) {
  @return (
    0: scaleLightness($base-color, -95%),
    10: scaleLightness($base-color, -90%),
    20: scaleLightness($base-color, -80%),
    25: scaleLightness($base-color, -75%),
    30: scaleLightness($base-color, -70%),
    35: scaleLightness($base-color, -65%),
    40: scaleLightness($base-color, -60%),
    50: scaleLightness($base-color, -50%),
    60: scaleLightness($base-color, -40%),
    70: scaleLightness($base-color, -30%),
    80: scaleLightness($base-color, -25%),
    90: scaleLightness($base-color, -10%),
    95: scaleLightness($base-color, -5%),
    98: scaleLightness($base-color, -2%),
    99: scaleLightness($base-color, -1%),
    100: $base-color
  );
}

:host {
  display: flex;
  align-items: center;
  padding: 16px;
  padding-inline: 16px 24px; // Extra right padding for inline notices
  border-radius: 4px;
  column-gap: 16px;
  border: 2px solid;
  color: var(--notice-color-text);
  background-color: var(--notice-color);

  --notice-color-button-text: #fff;
  --notice-color-button-hover-text: var(--notice-color-button-text);

  mat-icon {
    flex-shrink: 0;
    color: var(--notice-color-icon);
  }

  @each $name, $palette in $colors {
    $colorDark: list.nth($palette, 1);
    $colorLight: list.nth($palette, 2);

    &.#{$name} {
      --notice-color: #{$colorLight};
      --notice-color-text: #{$colorDark};
      --notice-color-outline-text: #{scaleLightness($colorDark, 20%)};
      --notice-color-icon: #{scaleLightness($colorDark, 30%)};
      --notice-color-outline: #{scaleLightness($colorLight, -30%)};
      --notice-color-light: #{scaleLightness($colorLight, 50%)};
      --notice-color-extra-dark: #{scaleLightness($colorLight, -50%)};

      // Used for buttons inside all notice types except 'extra-dark'
      --notice-color-button-bg: #{scaleLightness($colorLight, -40%)};
      --notice-color-button-hover-bg: #{scaleLightness($colorLight, -50%)};

      // Used for button inside 'extra-dark' notice type
      --notice-color-button-bg-alt: #{scaleLightness($colorLight, 20%)};
      --notice-color-button-hover-bg-alt: #{scaleLightness($colorLight, 80%)};
      --notice-color-button-text-alt: #{scaleLightness($colorLight, -60%)};

      // prettier-ignore
      &.mode-fill-dark,
      &.mode-fill-light {
        $_notice_theme: mat.define-theme(
          (
            color: (
                primary: map.merge(create-dark-palette($colorLight), default.$rest)
              )
          )
        );

        @include mat.checkbox-color($_notice_theme);
      }
    }
  }

  &.mode-fill-light {
    border-color: var(--notice-color-outline);
    background-color: var(--notice-color-light);
  }
  &.mode-fill-dark {
    border-color: var(--notice-color);
    background-color: var(--notice-color);
  }
  &.mode-fill-extra-dark {
    border-color: var(--notice-color-extra-dark);
    background-color: var(--notice-color-extra-dark);
    color: #fff;

    // Extra dark mode button need different colors for contrast
    --notice-color-button-bg: var(--notice-color-button-bg-alt);
    --notice-color-button-text: var(--notice-color-button-text-alt);
    --notice-color-button-hover-bg: var(--notice-color-button-hover-bg-alt);

    mat-icon {
      color: #fff;
    }
  }
  &.mode-outline {
    background-color: unset;
    border-color: var(--notice-color-outline);
    color: var(--notice-color-outline-text);
  }
  &.mode-basic {
    background-color: var(--notice-color);
    border-color: var(--notice-color);
  }

  // Style buttons inside notices
  ::ng-deep .mat-mdc-button-base {
    flex-shrink: 0;
    // set the button theme vars to our specific colors
    --mdc-filled-button-container-color: var(--notice-color-button-bg);
    --mdc-filled-button-label-text-color: var(--notice-color-button-text);

    &:hover {
      background-color: var(--notice-color-button-hover-bg) !important;
      color: var(--notice-color-button-hover-text) !important;
    }
  }
}

.notice-content {
  width: 100%;
}
