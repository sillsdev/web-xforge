// This script searches for text documents that have been corrupted in the same manner as we have seen in the past.
// It's a good idea to run this query occasionally in order to make sure our fix works and there isn't another way of
// corrupting data that has yet to be discovered.

use('xforge');

const texts = db.texts.find({
  ops: {
    $elemMatch: {
      $or: [
        { 'insert.verse': true },
        { 'attributes.segment': /(?:null|undefined)/ },
        // This will match delete and retain ops, which should not exist, but have been found in production
        { insert: { $exists: false } }
      ]
    }
  }
}, {
  _id: 1
}).toArray();

if (texts.length > 0) {
  console.log(texts.map(text => text._id).join('\n'));
} else {
  console.log('none');
}

texts
