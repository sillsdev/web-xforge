#!/bin/bash
# Vagrant sfdev provision script, to be run in guest when creating basebox
set -ueo pipefail

# Helper method to avoid failing from a network hiccup during provision
function tryharderto() { i=0; until "$@"; do ((++i > 3)) && false
  echo >&2 Retrying ${i}; sleep 2m; done }

## Vagrant Ubuntu setup

# Set mirror to generic
sudo perl -pi -e 's#/...archive.ubuntu.com#/archive.ubuntu.com#g' /etc/apt/sources.list

# Apply all available updates
tryharderto sudo apt-get update
# Download separately to break up the commands and reduce the chance of being
# asked for sudo password again.
tryharderto sudo apt-get -dy upgrade
tryharderto sudo apt-get -y upgrade
tryharderto sudo apt-get -y dist-upgrade

# Swap shouldn't be necessary and may cause unnecessary churn when backing up the guest
# image. Disable and delete the swapfile.
sudo swapoff -a && sudo perl -ni -e 'print unless /swapfile/' /etc/fstab \
  && sudo rm -fv /swapfile

# Don't prompt for OS upgrade to newer release
sudo perl -pi -e 's/Prompt=lts/Prompt=never/' /etc/update-manager/release-upgrades

# Passwordless sudo
sudo tee /etc/sudoers.d/passwordless >/dev/null <<< 'vagrant ALL=(ALL) NOPASSWD: ALL'

sudo tee /etc/sudoers.d/stars >/dev/null <<END
# Show stars when typing sudo password.
Defaults pwfeedback
END
sudo chmod 0400 /etc/sudoers.d/stars

# Make vagrant accessible via ssh
sudo apt-get install -y openssh-server

# Install initial vagrant login key.
mkdir -p ~/.ssh && chmod 0700 ~/.ssh
wget https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub \
  -O ~/.ssh/authorized_keys
chmod 0600 ~/.ssh/authorized_keys

# Prepare for ssh host keys to be re-generated uniquely by users
sudo tee /root/regenerate-ssh-host-keys >/dev/null << END
#!/bin/bash
# Regenerate ssh host keys if not present
test -f /etc/ssh/ssh_host_rsa_key || dpkg-reconfigure openssh-server
END
sudo chmod +x /root/regenerate-ssh-host-keys
sudo tee /etc/systemd/system/regenerate-ssh-host-keys.service >/dev/null << END
[Unit]
Description=regenerate-ssh-host-keys

[Service]
ExecStart=/root/regenerate-ssh-host-keys

[Install]
WantedBy=multi-user.target
END
sudo systemctl enable regenerate-ssh-host-keys

# Don't blank or lock VM screen
gsettings set org.gnome.desktop.session idle-delay 0
gsettings set org.gnome.desktop.screensaver lock-enabled false

# Don't let deja-dup hassle user about backing up from within guest
sudo apt-get remove -y deja-dup

# Adjust bash prompt for colour, $ on next line, and exit code display
perl -pi -e '/#force/ and s/^#//' ~/.bashrc
perl -pi -e '/PS1/ and s/\\\$ /\\n\\\$ /' ~/.bashrc
perl -pi -e '/PS1/ and s/@/\$?/' ~/.bashrc

# Don't report developer or tester usage to analytics
tee -a ~/.pam_environment <<< 'FEEDBACK=false'
tee -a ~/.pam_environment <<< 'WESAY_TRACK_AS_DEVELOPER=1'

# Record some base box version info, to help with diagnosis
tee ~/machine-info.txt >/dev/null << END
Vagrant base box information
Name: sfdev
Version:
Creation date: $(date -I)
Installed from:
Notes:
END

## Configure task bar

tryharderto sudo apt-get install -y \
  gnome-shell-extension-dash-to-panel \
  gnome-shell-extension-system-monitor \
  gnome-shell-extension-arc-menu \
  gnome-shell-extensions

# Settings - Notifications - Do Not Disturb. Can be turned back on if important.
gsettings set org.gnome.desktop.notifications show-banners false
# Settings - Appearance - Window theme - Dark
gsettings set org.gnome.desktop.interface gtk-theme 'Yaru-dark'
# Gedit: Menu - Preferences - Fonts & Colours - Solarized Dark
gsettings set org.gnome.gedit.preferences.editor scheme 'solarized-dark'
# Terminal: Menu - Preferences - Profiles > Unnamed - Colours.
# Under Text and Background Color, clear "Use colors from system theme"; Built-in schemes: Tango dark.
# Under Palette, Build-in schemes: Tango.
dconf write /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/use-theme-colors false
dconf write /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/background-color "'rgb(46,52,54)'"
dconf write /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/foreground-color "'rgb(211,215,207)'"
dconf write /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/palette \
  "['rgb(46,52,54)', 'rgb(204,0,0)', 'rgb(78,154,6)', 'rgb(196,160,0)', 'rgb(52,101,164)', 'rgb(117,80,123)', 'rgb(6,152,154)', 'rgb(211,215,207)', 'rgb(85,87,83)', 'rgb(239,41,41)', 'rgb(138,226,52)', 'rgb(252,233,79)', 'rgb(114,159,207)', 'rgb(173,127,168)', 'rgb(52,226,226)', 'rgb(238,238,236)']"

# Tweaks - Extensions
gsettings set org.gnome.shell enabled-extensions \
  "['arc-menu@linxgem33.com', 'dash-to-panel@jderose9.github.com', 'system-monitor@paradoxxx.zero.gmail.com']"
# Dash to panel: Position - Clock location - Right of system indicators
gsettings set org.gnome.shell.extensions.dash-to-panel location-clock 'STATUSRIGHT'
# Dash to panel: Behavior - Show Applications icon - Off
gsettings set org.gnome.shell.extensions.dash-to-panel show-show-apps-button false
# Arc menu: General - Arc Menu Default View - Categories List
dconf write /org/gnome/shell/extensions/arc-menu/enable-pinned-apps false
# Arc menu: Appearance - Override Arc Menu Theme - On
dconf write /org/gnome/shell/extensions/arc-menu/enable-custom-arc-menu true
# Arc menu: Appearance - Arc Menu Icon Settings - Arc Menu Icon: Start Box
dconf write /org/gnome/shell/extensions/arc-menu/menu-button-icon "'Start_Box'"
# Arc menu: Appearance - Arc Menu Icon Settings - 24 px
dconf write /org/gnome/shell/extensions/arc-menu/custom-menu-button-icon-size 24.0
# System-monitor: Display Icon: Off. Cpu, Memory, Net - Graph Width: 10, Refresh Time: 10000, Show Text: Off
dconf write /org/gnome/shell/extensions/system-monitor/icon-display false
dconf write /org/gnome/shell/extensions/system-monitor/cpu-graph-width 10
dconf write /org/gnome/shell/extensions/system-monitor/cpu-refresh-time 10000
dconf write /org/gnome/shell/extensions/system-monitor/cpu-show-text false
dconf write /org/gnome/shell/extensions/system-monitor/memory-graph-width 10
dconf write /org/gnome/shell/extensions/system-monitor/memory-refresh-time 10000
dconf write /org/gnome/shell/extensions/system-monitor/memory-show-text false
dconf write /org/gnome/shell/extensions/system-monitor/net-graph-width 10
dconf write /org/gnome/shell/extensions/system-monitor/net-refresh-time 10000
dconf write /org/gnome/shell/extensions/system-monitor/net-show-text false

## Configure desktop for SF development

# Tools

tryharderto sudo apt-get install -y \
  ack \
  tig \
  vim \
  wget \
  glances \
  inotify-tools \
  python-pyinotify \
  synaptic \
  chromium-browser \
  dconf-cli \
  git-gui \
  git-cola \
  terminator \
  byobu \
  meld \
  kdiff3-qt

# GitKraken
sudo snap install --classic gitkraken

# Visual Studio Code https://code.visualstudio.com/docs/setup/linux
tryharderto sudo apt-get install -y curl
cd
curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
tryharderto sudo apt-get update
tryharderto sudo apt-get install code
# Let VS Code and npm test watch lots of files. Whether from bug or need, 500000 is not enough.
sudo tee -a /etc/sysctl.conf >/dev/null <<< 'fs.inotify.max_user_watches=10000000'
sudo sysctl -p
# mono-devel for OmniSharp
tryharderto sudo apt-get install -y mono-devel

# Paratext
(wget -O- https://packages.sil.org/keys/pso-keyring-2016.gpg \
  | sudo tee /etc/apt/trusted.gpg.d/pso-keyring-2016.gpg) &> /dev/null
(. /etc/os-release && sudo tee /etc/apt/sources.list.d/packages-sil-org.list>/dev/null \
  <<< "deb http://packages.sil.org/$ID $VERSION_CODENAME main")
sudo apt-get update
tryharderto sudo apt-get install -y paratext-9.0

# Git and GUI git tools settings
git config --global diff.tool meld
git config --global merge.conflictstyle diff3
git config --global merge.tool kdiff3
git config --global color.ui true
git config --global rerere.enabled true
git config --global gui.editor gedit
git config --global rebase.autosquash true
# Git Cola settings. Set textwidth to help auto wrap commit messages.
git config --global cola.textwidth 70
git config --global cola.tabwidth 2
git config --global cola.linebreak true
git config --global cola.theme flat-dark-blue
git config --global cola.icontheme dark
# Arrange diff, commit, status, actions, branches, and console areas.
mkdir -p "${HOME}/.config/git-cola"
tee "${HOME}/.config/git-cola/settings" >/dev/null << END
{
    "gui_state": {
        "mainview": {
            "geometry": "AdnQywADAAAAAAA9AAAABwAABNsAAANKAAAAPQAAACwAAATbAAADSgAAAAAAAAAABkAAAAA9AAAALAAABNsAAANK",
            "width": 1200,
            "height": 800,
            "x": 50,
            "y": 10,
            "lock_layout": false,
            "windowstate": "AAAA/wAAAAL9AAAAAQAAAAIAAASfAAADB/wBAAAAA/sAAAAIAEQAaQBmAGYBAAAAAAAAAqoAAAB1AP////wAAAKtAAAB8gAAARUA/////AIAAAAE+wAAAAwAQwBvAG0AbQBpAHQBAAAAGAAAALsAAABFAP////sAAAAMAFMAdABhAHQAdQBzAQAAANYAAAEKAAAARQD////7AAAADgBBAGMAdABpAG8AbgBzAQAAAeMAAABFAAAARQD////8AAACKwAAAPQAAABFAP////wBAAAAAvsAAAAQAEIAcgBhAG4AYwBoAGUAcwEAAAKtAAAA7AAAAKIA////+wAAAA4AQwBvAG4AcwBvAGwAZQEAAAOcAAABAwAAAHAA/////AAAAqYAAAH5AAAAAAD////6/////wEAAAAD+wAAABQAUwB1AGIAbQBvAGQAdQBsAGUAcwAAAAAA/////wAAALgA////+wAAABIARgBhAHYAbwByAGkAdABlAHMAAAAAAP////8AAAC2AP////sAAAAMAFIAZQBjAGUAbgB0AAAAAAD/////AAAAkgD///8AAASfAAAAAAAAAAQAAAAEAAAACAAAAAj8AAAAAA=="
        }
    }
}
END
# gitk solarized dark colour scheme
mkdir -p "${HOME}/.config/git"
tee "${HOME}/.config/git/gitk" >/dev/null << END
set mainfont {sans 9}
set textfont {monospace 9}
set uifont {sans 9 bold}
set tabstop 8
set findmergefiles 0
set maxgraphpct 50
set maxwidth 16
set cmitmode patch
set wrapcomment none
set autoselect 1
set autosellen 40
set showneartags 1
set maxrefs 20
set visiblerefs {"master"}
set hideremotes 0
set showlocalchanges 1
set datetimeformat {%Y-%m-%d %H:%M:%S}
set limitdiffs 1
set uicolor #657b83
set want_ttk 1
set bgcolor #002b36
set fgcolor #839496
set uifgcolor #839496
set uifgdisabledcolor #586e75
set colors {"#6c71c4" "#268bd2" "#2aa198" "#859900" "#b58900" "#cb4b16" "#dc322f" "#d33682"}
set diffcolors {"#dc322f" "#859900" "#268bd2"}
set mergecolors {"#dc322f" "#268bd2" "#859900" "#6c71c4" brown "#009090" #d33682 "#808000" "#009000" "#ff0080" "#2aa198" "#b07070" "#70b0f0" "#70f0b0" "#f0b070" "#ff70b0"}
set markbgcolor #073642
set diffcontext 3
set selectbgcolor #586e75
set foundbgcolor #b58900
set currentsearchhitbgcolor #cb4b16
set extdifftool meld
set perfile_attrs 0
set headbgcolor #2aa198
set headfgcolor #002b36
set headoutlinecolor #839496
set remotebgcolor #6c71c4
set tagbgcolor #d33682
set tagfgcolor #002b36
set tagoutlinecolor #002b36
set reflinecolor #839496
set filesepbgcolor #073642
set filesepfgcolor #839496
set linehoverbgcolor #073642
set linehoverfgcolor #839496
set linehoveroutlinecolor #839496
set mainheadcirclecolor #fdf6e3
set workingfilescirclecolor #dc322f
set indexcirclecolor #859900
set circlecolors {white #268bd2 gray #268bd2 #268bd2}
set linkfgcolor #268bd2
set circleoutlinecolor #073642
set web_browser xdg-open
set geometry(main) 1227x739+53+11
set geometry(state) normal
set geometry(topwidth) 1227
set geometry(topheight) 425
set geometry(pwsash0) "684 1"
set geometry(pwsash1) "1046 1"
set geometry(botwidth) 773
set geometry(botheight) 309
set permviews {}
END

# Launchers

TOOLSDIR=${HOME}/Desktop/development-tools
mkdir -p "${TOOLSDIR}"
cp -aL /usr/share/applications/{terminator,code,byobu,chromium-browser,paratext9}.desktop \
  /snap/gitkraken/current/meta/gui/gitkraken.desktop "${TOOLSDIR}"
chmod +x "${TOOLSDIR}"/*.desktop

# Fix icon
perl -pi -e '/Icon/ and s#.*#Icon=/snap/gitkraken/current/usr/share/gitkraken/gitkraken.png#' \
  "${TOOLSDIR}"/gitkraken.desktop

OUTPUTFILE="${TOOLSDIR}/sf-git-cola.desktop"
tee "${OUTPUTFILE}" >/dev/null << ENDOFOUTPUTFILE
#!/usr/bin/env xdg-open

[Desktop Entry]
Version=1.0
Type=Application
Terminal=false
Exec=bash -c 'cd \${HOME}/src/web-xforge && git cola'
Name=SF Git Cola Commit Tool
Icon=/usr/share/git-cola/icons/git-cola.svg
ENDOFOUTPUTFILE
chmod +x "${OUTPUTFILE}"

OUTPUTFILE="${TOOLSDIR}/sf-gitk.desktop"
tee "${OUTPUTFILE}" >/dev/null << ENDOFOUTPUTFILE
#!/usr/bin/env xdg-open

[Desktop Entry]
Version=1.0
Type=Application
Terminal=false
Exec=bash -c 'cd \${HOME}/src/web-xforge && gitk --branches'
Name=SF Git History Viewer
Icon=/usr/share/git-gui/lib/git-gui.ico
ENDOFOUTPUTFILE
chmod +x "${OUTPUTFILE}"

# Trust the launchers. Seems to only work on desktop in Ubuntu 20.04.
mv "${TOOLSDIR}"/*.desktop ~/Desktop/
rmdir "${TOOLSDIR}"
cd ~/Desktop
for launcher in *.desktop; do
  gio set "${launcher}" metadata::trusted true
done

# Set panel icons
gsettings set org.gnome.shell favorite-apps \
  "['firefox.desktop', 'org.gnome.Nautilus.desktop', 'chromium_chromium.desktop', 'code.desktop']"

## SF repo and dev dependencies setup

tryharderto sudo apt-get -y install ansible git

mkdir -p ~/src
cd ~/src
if [ ! -d "web-xforge" ]; then
  git clone --recurse-submodules https://github.com/sillsdev/web-xforge.git
else
  cd web-xforge
  git pull --ff-only --recurse-submodules
fi

# The first update_cache is causing trouble. Change it from 'yes' to 'no' for now. '0777'
# isn't about file permissions; it's part of triggering multi-line substitution. The regex
# finds the 'update_cache: yes' line that follows a line ending in 'mongodb-org'
perl -0777 -pi -e 's/(mongodb-org.*?)update_cache: yes/$1update_cache: no/s' ~/src/web-xforge/deploy/dependencies.yml

cd ~/src/web-xforge/deploy/
ansible-playbook playbook_focal.yml --limit localhost

# Undo temporary changes
git checkout -- ~/src/web-xforge/deploy/dependencies.yml

# Install node LTS to upgrade to node 12 and npm 6.14.
sudo n lts

# Prevent npm @angular/cli from stopping to ask if we want to feed their analytics
export NG_CLI_ANALYTICS=false
# Download dependencies so VSCode doesn't show errors on start, like missing jest
cd ~/src/web-xforge/src/SIL.XForge.Scripture/ClientApp && npm i
cd ~/src/web-xforge/src/RealtimeServer && npm i
cd ~/src/web-xforge && dotnet build

# Use system hg.
tee -a ~/.pam_environment <<< 'HG_PATH=/usr/bin/hg'

# Create readme `~/Desktop/machine-instructions.txt`.
sudo tee ~/Desktop/machine-instructions.txt >/dev/null <<END
Scripture Forge Development Machine

If possible, your git user and email were set from your host machine. If not, run

  git config --global user.name "My Name"
  git config --global user.email "me@example.com"

See the xForge Project Workflow gdoc for setting developer secrets,
Paratext account setup, enabling multiple monitors in VirtualBox, etc.

You may find it helpful to increase the amount of RAM your virtual machine
is given, by increasing 'vb.memory' in 'Vagrantfile', then running
'vagrant halt && vagrant up' from your host.

SF is cloned in ~/src/web-xforge .
Launchers for development tools are on the desktop.
END

echo "$0: $(date -Is): Script finished successfully."
