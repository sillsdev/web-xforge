<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EmailBad" xml:space="preserve">
    <value>Inserir um e-mail válido</value>
  </data>
  <data name="EmailMissing" xml:space="preserve">
    <value>Insira seu e-mail</value>
  </data>
  <data name="InviteEmailOption" xml:space="preserve">
    <value>Insira seu e-mail e uma nova senha para sua conta {0} e clique em Entrar.</value>
  </data>
  <data name="InviteFacebookOption" xml:space="preserve">
    <value>Clique em {0}Entrar com Facebook{1} e siga as instruções para acessar {2} usando uma conta existente do Facebook, ou</value>
  </data>
  <data name="InviteGoogleOption" xml:space="preserve">
    <value>Clique em {0}Entrar com Google{1} e siga as instruções para acessar {2} usando uma conta existente do Google (como Gmail), ou</value>
  </data>
  <data name="InviteGreeting" xml:space="preserve">
    <value>Olá,{0}{1} lhe convida a juntar-se ao projecto {2} em {3}.{0}Basta clicar no link abaixo, escolher como fazer o login, e você estará pronto para começar.{0}{0}Para entrar, vá para {4}</value>
  </data>
  <data name="InviteInstructions" xml:space="preserve">
    <value>Se você ainda não é usuário de {0}, depois de clicar no link, clique em {1}Entrar{2} e siga um dos seguintes procedimentos:</value>
  </data>
  <data name="InviteLinkSharingOff" xml:space="preserve">
    <value>Este link só funcionará para este endereço de e-mail.</value>
  </data>
  <data name="InviteLinkSharingOn" xml:space="preserve">
    <value>Este link pode ser compartilhado com outros para que também possam se juntar ao projeto.</value>
  </data>
  <data name="InvitePTOption" xml:space="preserve">
    <value>Clique em {0}Entrar com Paratext{1} e siga as instruções para acessar {2} usando uma conta existente do Paratext, ou</value>
  </data>
  <data name="InviteSignature" xml:space="preserve">
    <value>Atenciosamente, {0}A {1} Equipe</value>
  </data>
  <data name="InviteSubject" xml:space="preserve">
    <value>Você foi convidado para o projeto {0} em {1}</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Idioma</value>
    <comment>Tool tip for the language selector</comment>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Learn More</value>
    <comment>Link to the learn more page seen in the page footer and as button at the bottom of the home page</comment>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Login</value>
    <comment>Log In button label</comment>
  </data>
  <data name="MessageMissing" xml:space="preserve">
    <value>Informe-nos por que você deseja usar o Scripture Forge</value>
  </data>
  <data name="NameMissing" xml:space="preserve">
    <value>Insira seu nome</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privacidade</value>
    <comment>Link to the Privacy policy seen in the page footer</comment>
  </data>
  <data name="RoleMissing" xml:space="preserve">
    <value>Selecione seu papel no projeto da língua</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Inscrever-se</value>
    <comment>Sign Up button label</comment>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>Termos</value>
    <comment>Link to the Terms of service seen in the page footer</comment>
  </data>
  <data name="UserMissing" xml:space="preserve">
    <value>O usuário não existe.</value>
  </data>
</root>
