<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EmailBad" xml:space="preserve">
    <value>ꤚꤢ꤭ꤔꤟꤌꤣ꤭ email ꤘꤣ ꤔꤢꤪ꤭ꤢꤩ꤬ꤔꤟꤤ</value>
  </data>
  <data name="EmailMissing" xml:space="preserve">
    <value>ꤚꤢ꤭ꤔꤟꤌꤣ꤭ ꤔꤟꤢꤧ꤬ email ꤘꤣ ꤔꤢꤪ꤭ꤢꤩ꤬ꤔꤟꤤ</value>
  </data>
  <data name="InviteEmailOption" xml:space="preserve">
    <value>ꤚꤢ꤭ꤔꤟꤌꤣ꤭ ꤔꤟꤢꤧ꤬  email ꤔꤢ ꤔꤟꤢꤧ꤬ account ꤢ꤬ꤞꤢꤧ꤭ ꤘꤣ ꤔꤟꤢꤧ꤬ ꤔꤌꤣ꤬ ꤚꤢꤪ ꤒꤣ꤬ꤙꤢꤧ꤬ Sign up ꤔꤌꤣ꤬꤯</value>
  </data>
  <data name="InviteFacebookOption" xml:space="preserve">
    <value>ꤒꤣ꤬ꤙꤢꤧ꤬ Sign up ꤘꤣ Facebook ꤔꤌꤣ꤬, ꤓꤌꤣ꤭ꤚꤢꤪ ꤊꤚꤝꤥ꤭ꤗꤟꤢꤩ꤬ꤊꤟꤌꤣ꤭ ꤢ꤬ꤊꤜꤛꤢꤢ꤬ꤊꤜꤥ꤭ ꤜꤟꤢꤩꤔꤟꤌꤣ꤭ ꤔꤌꤣ꤬, ꤔꤢꤪ꤭ꤢꤩ꤬ Facebook account ꤘꤣ ꤢ꤬ꤔꤟꤤꤕꤢ꤭ ꤔꤌꤣ꤬ꤔꤤ, ꤗꤟꤢꤒꤥ꤬ꤚꤢꤪ</value>
  </data>
  <data name="InviteGoogleOption" xml:space="preserve">
    <value>ꤒꤣ꤬ꤙꤢꤧ꤬ ꤘꤣ Sign up ꤘꤣ Google ꤢ꤬ꤑꤢꤩ꤭ ꤔꤌꤣ꤬, ꤓꤌꤣ꤭ꤚꤢꤪ ꤊꤚꤝꤥ꤭ꤗꤟꤢꤩ꤬ꤊꤟꤌꤣ꤭ ꤢ꤬ꤊꤜꤛꤢꤢ꤬ꤊꤜꤥ꤭ ꤜꤟꤢꤩꤔꤟꤌꤣ꤭ ꤔꤌꤣ꤬, ꤔꤢꤪ꤭ꤢꤩ꤬ Google account ꤘꤣ ꤢ꤬ꤔꤟꤤꤕꤢ꤭ ꤔꤌꤣ꤬ꤔꤤ (ꤖꤢꤨ Gmail ꤔꤌꤣ꤬), ꤗꤟꤢꤒꤥ꤬ꤚꤢꤪ</value>
  </data>
  <data name="InviteGreeting" xml:space="preserve">
    <value>ꤟꤢ꤬ꤜꤥ꤬, {0}{1} ꤕꤟꤢꤧ꤬ ꤢꤧꤗꤟꤥ꤬ ꤔꤟꤢꤧ꤬ ꤘꤣ ꤊꤟꤢꤦ ꤔꤟꤢꤧ꤬ ꤊꤟꤢꤦ ꤔꤟꤌꤣ꤭ꤕꤢ꤬ ꤊꤟꤌꤣ꤭ {2} ꤙꤤ project ꤛꤢꤩ꤭, {3}.{0} ꤒꤣ꤬ꤙꤢꤧ꤬ ꤕꤚꤢꤧ link ꤘꤣ ꤢ꤬ꤜꤟꤢꤧ꤭ ꤛꤢꤩ꤭ ꤔꤤ, ꤔꤝꤥꤖꤛꤢꤩ ꤜꤟꤢꤩ ꤔꤟꤌꤣ꤭ ꤔꤌꤣ꤬, ꤓꤌꤣ꤭ꤚꤢꤪ ꤔꤟꤢꤧ꤬ ꤡꤢꤓꤛꤢ꤬ ꤗꤢ꤬ ꤢ꤬ꤔꤟꤤ ꤟꤢꤪ, {0}{0} ꤜꤟꤢꤩ ꤕꤜꤥ꤭ꤓꤢꤦ꤭ ꤢ꤬ꤑꤢꤩ꤭ ꤡꤛꤣ ꤘꤣ {4}</value>
  </data>
  <data name="InviteInstructions" xml:space="preserve">
    <value>ꤔꤟꤢꤧ꤬ ꤊꤤ꤬ ꤗꤟꤢꤟꤤ  {0} user ꤒꤥ꤬ ꤟꤢꤩꤚꤢꤪ, ꤙꤤ ꤔꤟꤢꤧ꤬ ꤒꤣ꤬ꤙꤢꤧ꤬ ꤓꤌꤣ꤭ꤟꤢꤪ link ꤢ꤬ꤋꤢꤧ꤭ꤔꤌꤣ꤬, ꤒꤣ꤬ꤙꤢꤧ꤬ {1}Sign Up{2} ꤚꤢꤪ ꤗꤟꤢꤩ꤬ ꤘꤣ ꤢ꤬ꤜꤟꤢꤧ꤭ ꤛꤢꤩ꤭ꤒꤢ꤬ꤟꤢꤩ꤬:</value>
  </data>
  <data name="InviteLinkSharingOff" xml:space="preserve">
    <value>Link ꤛꤢꤩ꤭ꤗꤢ꤬ ꤢ꤬ꤗꤟꤢꤩ꤬ ꤒꤟꤢꤧ꤬ꤗꤟꤢꤩ꤬ ꤔꤢ ꤒꤢꤦ꤮ email ꤛꤢꤩ꤭ ꤕꤚꤢꤧ꤯</value>
  </data>
  <data name="InviteLinkSharingOn" xml:space="preserve">
    <value>ꤞꤛꤢꤖꤢꤨ ꤔꤟꤢꤧ꤬ ꤊꤟꤢꤦ ꤕꤜꤝꤥ꤭ꤓꤢꤦ꤭ ꤔꤟꤤ ꤔꤢ project ꤛꤢꤩ꤭ ꤢ꤬ꤑꤢꤩ꤭, link ꤛꤢꤩ꤭ꤗꤢ꤬ ꤞꤢꤨ꤭ꤘꤤ꤭ꤒꤟꤢꤦ ꤕꤢꤩ ꤔꤢ ꤢꤨ꤭ꤚꤟꤌꤣ꤬ ꤗꤢ꤬ ꤢ꤬ꤔꤟꤤ꤯ </value>
  </data>
  <data name="InvitePTOption" xml:space="preserve">
    <value>ꤒꤣ꤬ꤙꤢꤧ꤬ {0}Sign up ꤔꤢ Paratext ꤔꤌꤣ꤬, {1} ꤓꤌꤣ꤭ꤚꤢꤪ ꤜꤟꤢꤩꤓꤛꤢ꤬ꤔꤟꤌꤣ꤭ ꤔꤟꤤ ꤢ꤬ꤑꤢꤩ꤭ ꤊꤚꤝꤥ꤭ꤗꤟꤢꤩ꤬ꤊꤟꤌꤣ꤭ ꤖꤢꤨ ꤒꤟꤢꤧ꤬ꤐꤟꤢꤨ꤭ꤊꤜꤛꤢ ꤔꤌꤣ꤬, {2} ꤔꤢꤪ꤭ꤢꤩ꤬ Paratext account ꤘꤣ ꤔꤢꤪ꤭ꤢꤩ꤬ꤔꤟꤤ ꤕꤢ꤭ ꤔꤌꤣ꤬, ꤗꤟꤢꤒꤥ꤬ꤚꤢꤪ</value>
  </data>
  <data name="InviteSignature" xml:space="preserve">
    <value>ꤤ꤬ꤕꤟꤢꤪꤗꤛꤢꤔꤟꤤ, {0} {1} ꤕꤜꤢꤪꤗꤟꤢꤨ꤬</value>
  </data>
  <data name="InviteSubject" xml:space="preserve">
    <value>ꤢꤨ꤭ ꤢꤧꤗꤟꤥ꤬ ꤔꤟꤢꤧ꤬ ꤘꤣ project ꤛꤢꤩ꤭{0} ꤙꤤ {1}</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>ꤍꤟꤥ</value>
    <comment>Tool tip for the language selector</comment>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Learn More</value>
    <comment>Link to the learn more page seen in the page footer and as button at the bottom of the home page</comment>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>ꤔꤟꤌꤣ꤭</value>
    <comment>Log In button label</comment>
  </data>
  <data name="MessageMissing" xml:space="preserve">
    <value>ꤔꤟꤢꤧ꤬ ꤞꤢꤧꤐꤟꤢꤦ ꤔꤢꤪ꤭ꤢꤩ꤬ Scripture Forge ꤗꤢ꤬ ꤗꤟꤢꤩ꤬ꤒꤢꤩ꤭ ꤔꤌꤣ꤬ ꤘꤛꤢꤩꤞꤢꤧꤑꤢꤩ꤭ ꤕꤟꤢꤧ꤬</value>
  </data>
  <data name="NameMissing" xml:space="preserve">
    <value>ꤙꤢꤩ꤬ꤔꤟꤌꤣ꤭ ꤔꤟꤢꤧ꤬ꤗꤝꤟꤤ꤬</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>ꤒꤟꤢꤧ꤬ꤔꤟꤤꤘꤢꤦ꤬ </value>
    <comment>Link to the Privacy policy seen in the page footer</comment>
  </data>
  <data name="RoleMissing" xml:space="preserve">
    <value>ꤔꤝꤥꤖꤛꤢꤩ ꤔꤟꤢꤧ꤬ꤜꤟꤢ꤭ꤍꤟꤥ project</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>ꤙꤢꤩ꤬ꤓꤛꤢ꤬ </value>
    <comment>Sign Up button label</comment>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>ꤕꤜꤢꤪꤗꤟꤢꤨ꤬</value>
    <comment>Link to the Terms of service seen in the page footer</comment>
  </data>
  <data name="UserMissing" xml:space="preserve">
    <value>User ꤥ꤬ ꤒꤥ꤬꤯ </value>
  </data>
</root>
